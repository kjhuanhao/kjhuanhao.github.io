{"meta":{"title":"Huanhao's Blog","subtitle":"","description":"","author":"HuanHao","url":"https://mrhuanhao.cn","root":"/"},"pages":[{"title":"所有分类","date":"2020-04-20T09:56:26.409Z","updated":"2020-04-20T09:56:26.409Z","comments":true,"path":"categories/index.html","permalink":"https://mrhuanhao.cn/categories/index.html","excerpt":"","text":""},{"title":"友链","date":"2020-04-20T10:13:53.767Z","updated":"2020-04-20T10:13:53.767Z","comments":true,"path":"friends/index.html","permalink":"https://mrhuanhao.cn/friends/index.html","excerpt":"","text":"申请友链-友链格式 交换友链图片工具我的友链 作者名： Huanhao网站名： Huanhao’s Blog头像：https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/avatar.jpg网站链接： https://mrhuanhao.cn/简介：彼方为谁,无我有问,九月露湿,待君之前 友链格式 name: 网站名或作者名avatar: 头像链接（请使用https链接）url: 网站链接backgroundColor: ‘#3E74C9’textColor: ‘#fff’tags: 标签desc: 描述如果你更换了链接或者头像等等信息，请在下方留言 Github图床 sm.ms图床 压缩图片"},{"title":"所有标签","date":"2020-04-20T09:56:26.419Z","updated":"2020-04-20T09:56:26.419Z","comments":true,"path":"tags/index.html","permalink":"https://mrhuanhao.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"搭建我的世界服务器","slug":"mcsever","date":"2020-04-21T12:49:07.000Z","updated":"2020-04-21T14:06:23.550Z","comments":true,"path":"2020/04/21/mcsever/","link":"","permalink":"https://mrhuanhao.cn/2020/04/21/mcsever/","excerpt":"近期终于想到闲置的服务器应该做什么了，于是有了这篇搭建我的世界服务器的教程（可怜我的服务器闲置了半年）本篇教程不适合服务器纯小白，不会给你解释一些命令之类的，如果你了解一些linux命令，那这篇教程是不吃力的","text":"近期终于想到闲置的服务器应该做什么了，于是有了这篇搭建我的世界服务器的教程（可怜我的服务器闲置了半年）本篇教程不适合服务器纯小白，不会给你解释一些命令之类的，如果你了解一些linux命令，那这篇教程是不吃力的 我的服务器配置我的服务器只是拿来3个人联机用的，所以这个配置应该是够了，如果是4人以上你需要更大的配置。 操作系统：CentOS 7.6 64位 CPU：1核 内存：1GB 公网带宽： 1Mbps 连接服务器1ssh root@ip 安装依赖Centos7 1sudo yum install java-1.8.0-openjdk ubuntu 12sudo apt-get updatesudo apt-get install openjdk-8-jdk 检测是否成功1java -version 安装宝塔宝塔的安装教程请到官网查看 安装教程 部署MC服务器创建Minecraft游戏运行目录设置Minecraft的运行路径：打开宝塔面板，进入文件-根目录-新建目录-输入你想取的名称-确定创建 下载服务文件12cd /MCsudo wget https://launcher.mojang.com/v1/objects/3737db93722a9e39eeada7c27e7aca28b144ffa7/server.jar 如果你没有wget可以使用你的包管理命令下载安装 关闭防火墙1systemctl stop firewalled.servce 阿里云的服务器还需要在阿里后台，放行25565端口 运行Minecraft以及配置服务器自己查看一下，下载下来的文件叫什么我是server.jar 下面的命令对应的地方改为你下载下来的文件名 1java -Xmx1500M -Xms666M -jar server.jar 注意：1.Xms666是服务器k启动所占最大（运行）内存，Xmx1500是服务器正常运行最大内存2.我游戏路径是/MC是路径，即pwd后的路径这个时候，如果你是第一次运行，是会报错的，请继续往下看 同意用户许可文件eulaw.txt这是报错信息 我这里使用vi进行修改，你也可以去宝塔修改 在Minecraft运行路径下，终端输入： 1vi eula.txt 把eula=false,改为eula=true 此时你再执行,就可以了 1java -Xmx1500M -Xms666M -jar server.jar 如何进入服务器连接服务器的格式如下 注意符号是英文 1ip:25565 停止服务器1stop","categories":[{"name":"服务器","slug":"服务器","permalink":"https://mrhuanhao.cn/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"我的世界","slug":"我的世界","permalink":"https://mrhuanhao.cn/tags/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C/"}]},{"title":"gh-proxy","slug":"gh-proxy","date":"2020-04-15T00:15:49.000Z","updated":"2020-04-20T09:56:26.354Z","comments":true,"path":"2020/04/15/gh-proxy/","link":"","permalink":"https://mrhuanhao.cn/2020/04/15/gh-proxy/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Arch双显卡方案","slug":"arch-newsil","date":"2020-04-05T14:32:15.000Z","updated":"2020-04-20T09:56:26.335Z","comments":true,"path":"2020/04/05/arch-newsil/","link":"","permalink":"https://mrhuanhao.cn/2020/04/05/arch-newsil/","excerpt":"在linux下，你可能知道大黄蜂这个双显卡方案，在arch也有，但是本篇文章会告诉你一个最正确最简单的双显卡方案","text":"在linux下，你可能知道大黄蜂这个双显卡方案，在arch也有，但是本篇文章会告诉你一个最正确最简单的双显卡方案 前言笔记本，还在纠结Intel核显+NVIDIA独显的双显卡方案吗？ 你是使用NVIDIA独显闭源驱动、大黄蜂切换、还是选择nouveau 到底选什么如果只安装闭源驱动，当然可以，但是要知道，耗电速度可能远远超过你的持久 现在我给你介绍NVIDIA Optimus这一个在arch下最好的最简单的双显卡方案。 它和ubuntu下的PRIME类似，通过在显卡管理器中更改配置文件来使用核显或独显。 它到底有多简单呢？ 请随我安装 安装NVDIA Optimus我们只需要安装两个包 123456pacman -S nvidia bbswitch yaourt -S optimus-manager-qt# 托盘程序#如果配置有archlinuxcn源，也可以使用pacman来安装#如果使用KDE桌面，需安装optimus-manager-qt-kde 注意: 安装英伟达闭源驱动时，如果使用自定义内核，或者不想驱动崩掉，那就安装nvidia-dkms，bbswitch也是同理，安装bbswitch-dkms如:1pacman -S nvidia-dkms bbswitch-dkms安装optimus-manager-qt时，kde桌面需要在后面加上-kde1yaourt -S optimus-manager-qt 重启此时你可以在托盘看见英伟达的图片，右键-设置 在项optimus中，把switching method改为Bbswitch 然后确定即可 如何使用直接右键，有三个选项 switch to intel switch to Nvidia switch to Hybrid（无需理会） 直接选择即可，是不是很简单！","categories":[{"name":"arch","slug":"arch","permalink":"https://mrhuanhao.cn/categories/arch/"}],"tags":[{"name":"arch","slug":"arch","permalink":"https://mrhuanhao.cn/tags/arch/"}]},{"title":"git使用双秘钥","slug":"gittwossh","date":"2020-04-03T12:33:42.000Z","updated":"2020-04-20T09:56:26.359Z","comments":true,"path":"2020/04/03/gittwossh/","link":"","permalink":"https://mrhuanhao.cn/2020/04/03/gittwossh/","excerpt":"由于新项目需要两个github账号，然后一个git秘钥只能绑定一个号，所以特地写出教程，教你如何配置双秘钥","text":"由于新项目需要两个github账号，然后一个git秘钥只能绑定一个号，所以特地写出教程，教你如何配置双秘钥 生成秘钥生成两个秘钥 12$ ssh-keygen -t rsa -C \"你的邮箱\"$ ssh-keygen -t rsa -C \"你的邮箱\" -f ~/.ssh/名字(如huanhao) 添加私钥添加私钥1 1$ ssh-add ~/.ssh/id_rsa 添加私钥2 1$ ssh-add ~/.ssh/名字 如果执行ssh-add时提示”Could not open a connection to your authentication agent”，可以现执行命令： 1$ ssh-agent bash 相关命令 12345# 可以通过 ssh-add -l 来确私钥列表$ ssh-add -l# 可以通过 ssh-add -D 来清空私钥列表$ ssh-add -D 修改配置文件在~/.ssh目录下新建一个config文件，不要后缀 12$ cd ~/.ssh$ touch config 添加以下内容 1234567891011# githubHost gitlab.com HostName gitlab.com PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa# github1Host github1.com HostName github.com PreferredAuthentications publickey IdentityFile ~/.ssh/名字 修改文件权限在~/.ssh目录下修改权限 1chmod 600 * 验证分别输出两个不同的名字，证明成功 12ssh -T git@github.comssh -T git@github1.com 克隆仓库使用第二个秘钥时，需要修改对应的github.com 1git@github1.com:用户名&#x2F;仓库.git","categories":[{"name":"git","slug":"git","permalink":"https://mrhuanhao.cn/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://mrhuanhao.cn/tags/git/"}]},{"title":"安装brew的正确姿势","slug":"installbrew","date":"2020-03-31T09:18:29.000Z","updated":"2020-04-20T09:56:26.368Z","comments":true,"path":"2020/03/31/installbrew/","link":"","permalink":"https://mrhuanhao.cn/2020/03/31/installbrew/","excerpt":"你可能尝试了很多办法去安装brew，从一开始的网络超时，到一脸蒙的手动安装，本文教你如何正确安装brew","text":"你可能尝试了很多办法去安装brew，从一开始的网络超时，到一脸蒙的手动安装，本文教你如何正确安装brew 创建Homebrew目录打开你的终端执行下面的命令，进行创建Homebrew 1sudo mkdir /usr/local/Homebrew 同步brew.git库1sudo git clone https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git /usr/local/Homebrew 添加环境变量1sudo ln -s /usr/local/Homebrew/bin/brew /usr/local/bin/brew 同步core库123sudo mkdir -p /usr/local/Homebrew/Library/Taps/homebrew/homebrew-coresudo git clone https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core 同步cask12sudo mkdir -p /usr/local/Homebrew/Library/Taps/homebrew/homebrew-casksudo git clone https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask.git /usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask 提权1sudo chown -R $(whoami) /usr/local/Cellar 查看版本号1brew -v 更换镜像源此时你安装东西的话，还是会感受到超时的力量，所以我们需要更换国内镜像源 替换homebrew默认源 123cd \"$(brew --repo)\"git remote set-url origin git://mirrors.ustc.edu.cn/brew.git bash用户： 123echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles' &gt;&gt; ~/.bash_profilesource ~/.bash_profile #刷新 zsh用户 123echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles' &gt;&gt; ~/.zshrcsource ~/.zshrc #刷新 记得要更新 1brew update 我的博客即将同步至腾讯云+社区，邀请大家一同入驻：https://cloud.tencent.com/developer/support-plan?invite_code=2t77vjr03n288","categories":[{"name":"brew","slug":"brew","permalink":"https://mrhuanhao.cn/categories/brew/"}],"tags":[{"name":"brew","slug":"brew","permalink":"https://mrhuanhao.cn/tags/brew/"}]},{"title":"【完美解决】picgo上传各种失败问题","slug":"solvepicnet","date":"2020-03-28T03:34:51.000Z","updated":"2020-04-20T09:56:26.389Z","comments":true,"path":"2020/03/28/solvepicnet/","link":"","permalink":"https://mrhuanhao.cn/2020/03/28/solvepicnet/","excerpt":"最近我听说typora可以和picgo一起使用了，于是我就去使用了一下，我发现是真滴香啊 不过用了没多久，还是老毛病，又是一些奇奇怪怪的问题，应该是墙的问题，于是我又是找到了一个项目，可以帮助你中转服务器，然后再上传到github，别提多香！","text":"最近我听说typora可以和picgo一起使用了，于是我就去使用了一下，我发现是真滴香啊 不过用了没多久，还是老毛病，又是一些奇奇怪怪的问题，应该是墙的问题，于是我又是找到了一个项目，可以帮助你中转服务器，然后再上传到github，别提多香！ 工具你需要如下东西: 梯子，不知道哪里有的，请看我博客的导航栏找一下 一个国外邮箱，比如google或者outlook（google好一些） 如果以上两个你都没有，或者不想弄，怎么办？ 请往下看先 创建虚拟主机因为中转服务器需要国外服务器，所以这里使用国外的虚拟主机进行上传，我下面提供一个免费的虚拟主机网站，不过你需要有梯子上这个网站，他的虚拟主机是免费，所以我选择了它 如果你没有梯子给你以下两个方案： 买个梯子，不知道哪里有的，请看我博客的导航栏找一下 使用彩虹云，也是免费的https://www.cccyun.net/ 【推荐】 访问下面的网站，然后注册一个账号，我就不教了 https://www.000webhost.com/ 【推荐使用上面的彩虹云，这是我后来发现的国内网站】 然后回到主页选择免费套餐，你也可以在没有注册之前选择免费套餐，然后注册 需要注意一下：注册邮箱需要是google或者outlook 你都能访问这个网站了，注册一个国外邮箱又不是不可以 如果梯子和国外邮箱你都没有，或者不想弄，请参考下面的方案： 一个国外的虚拟主机（免费的很多，自己找找) 选择白嫖，那么你可以直接看到设置picgo的部分 注册之后会给你的邮箱发验证邮件，点开即可 选择other 上下分别填写网站名称以及密码 选择第三个 登入管理页面之后 你会来到这个页面，我们暂时无需动任何东西 其他国外免费虚拟主机; https://www.cccyun.net/ 【推荐】 配置autopiccdn项目地址如下： https://github.com/kjhuanhao/autoPicCdn fas fa-download 下载之后解压，我们需要修改up.php这个文件 按照提示修改下面的代码： 1234define(&quot;REPO&quot;,&quot;仓库&quot;);&#x2F;&#x2F;必须是下面用户名下的公开仓库define(&quot;USER&quot;,&quot;github仓库名&quot;);&#x2F;&#x2F;必须是当前GitHub用户名define(&quot;MAIL&quot;,&quot;yumusb@foxmail.com&quot;);&#x2F;&#x2F;define(&quot;TOKEN&quot;,&quot;token&quot;);&#x2F;&#x2F;https:&#x2F;&#x2F;github.com&#x2F;settings&#x2F;tokens 去这个页面生成一个有写权限的token（write:packages前打勾） 修改完成之后保存即可 上传up.php回到你的虚拟主机管理界面 进入下面这个目录 点击上传，选择你刚才修改的up.php 访问下面的地址： https://www.000webhost.com/members/website/list 其中有你刚刚建立的网站和地址，我们需要复制地址下来 配置Picgo打开你的picgo 选择插件设置 搜索web-uploader 点击设置，然后选择配置 API地址填写刚刚复制的地址 + /up.php POST参数名填写pic JSON路径填写data.url 确定保存之后你就发现图床多了一个自定义web图床 之后你就直接使用这个自定义web图床即可，它可以先把图片上传到这个国外的虚拟主机，然后再把图片传到github，这样我们就不会遇到各种网路问题了，而且返回的链接是经过cdn加速的 白嫖 你可以使用我的API地址： https://mrhuanhao.000webhostapp.com/up.php 我的博客即将同步至腾讯云+社区，邀请大家一同入驻：https://cloud.tencent.com/developer/support-plan?invite_code=2t77vjr03n288","categories":[{"name":"picgo","slug":"picgo","permalink":"https://mrhuanhao.cn/categories/picgo/"}],"tags":[{"name":"picgo","slug":"picgo","permalink":"https://mrhuanhao.cn/tags/picgo/"}]},{"title":"netlify部署博客","slug":"netlifydeploy","date":"2020-03-26T11:09:15.000Z","updated":"2020-04-20T09:56:26.379Z","comments":true,"path":"2020/03/26/netlifydeploy/","link":"","permalink":"https://mrhuanhao.cn/2020/03/26/netlifydeploy/","excerpt":"今天发现github的pages服务居然炸了，不知道谁干的，所以我将目光放到了netlify，以前就早有耳闻，好像速度会比github快，我也不知道是不是，我主要是为了双线部署，解决移动宽带不能访问我博客的原因。不管如何，本篇文章教你如何使用netlify部署你的博客。","text":"今天发现github的pages服务居然炸了，不知道谁干的，所以我将目光放到了netlify，以前就早有耳闻，好像速度会比github快，我也不知道是不是，我主要是为了双线部署，解决移动宽带不能访问我博客的原因。不管如何，本篇文章教你如何使用netlify部署你的博客。 登入Netlify Netlify官网 直接使用你的github账号就可以了，如果无法访问这个网站，那你可能需要挂梯。 部署博客我使用的是hexo所以直接按照以往部署的方式即可 1hexo g -d 你无需更改hexo的任何配置，只需要使用这个命令先部署到github。 如果你使用的是其他静态程序，只需要和你以前一样，先部署到github即可。 创建站点点击New site from Git 然后选择Github 允许登入后，直接选择你要部署的仓库 绑定域名之后等待部署，会给你跳到一个页面，如图： 有一个带netlify的域名，也就是你目前唯一的一个域名，你需要把netlify给你的域名进行解析，使用CNAME记录类型，和你解析github的网站一样。 至于如何解析，我这里就不教了。 然后点击Add domian alias添加你的域名，刷新一下，如果域名变绿色就是解析成功了 使用HTTPS你可以使用官方为你提供的HTTPS证书，但是要做一些配置，我这里直接使用我自己的证书。 免费证书可以到腾讯云申请。 先下载你的证书文件 解压后，可以看到如下文件 我们只需要Apache目录下的证书文件 在HTTPS这里，下面应该有两个按钮，因为我已经绑过域名了，所以和你们显示的不一样 我们选择HTTPS下面的第二个按钮即可 把带有域名并以crt结尾的证书文件，复制粘贴到下面的第一个框 把带有域名以key结尾的文件内容，复制粘贴到第二个框 把带有bundle的文件内容，复制粘贴到第三个框 最后选择install就可以了 完成后如下图显示：","categories":[{"name":"netlify","slug":"netlify","permalink":"https://mrhuanhao.cn/categories/netlify/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://mrhuanhao.cn/tags/hexo/"},{"name":"netlify","slug":"netlify","permalink":"https://mrhuanhao.cn/tags/netlify/"}]},{"title":"Valine评论系统邮件提醒","slug":"emailreply","date":"2020-03-25T03:53:20.000Z","updated":"2020-04-20T09:56:26.352Z","comments":true,"path":"2020/03/25/emailreply/","link":"","permalink":"https://mrhuanhao.cn/2020/03/25/emailreply/","excerpt":"这几天想到，别人给我发的评论，我还要到后台去看，实在是太麻烦了，于是发现了一个好项目valine-admin可以帮我发送邮件评论提醒，这样我就可以实时收到别人给我发的评论。 项目地址","text":"这几天想到，别人给我发的评论，我还要到后台去看，实在是太麻烦了，于是发现了一个好项目valine-admin可以帮我发送邮件评论提醒，这样我就可以实时收到别人给我发的评论。 项目地址 本文章图片素材，部分来自此项目的官网 设置valine邮件提醒我们需要先确保你的valine可以正常发送邮件 访问leancloud 如图设置你的邮件主题 修改邮件主题：你在某某网站的评论收到了新的评论 修改内容：将下面的代码复制到“内容”中，并将其中的你的网址首页链接改为你的网址首页链接。 12345&lt;p&gt;Hi, &#123;&#123;username&#125;&#125;&lt;&#x2F;p&gt;&lt;p&gt;你在 &#123;&#123;appname&#125;&#125; 的评论收到了新的回复，请点击查看：&lt;&#x2F;p&gt;&lt;p&gt;&lt;a href&#x3D;&quot;你的网址首页链接&quot; style&#x3D;&quot;display: inline-block; padding: 10px 20px; border-radius: 4px; background-color: #3090e4; color: #fff; text-decoration: none;&quot;&gt;马上查看&lt;&#x2F;a&gt;&lt;&#x2F;p&gt; 点击“保存”按钮 部署valine-admin 点击 云引擎 -&gt; 设置 填写代码库并保存：https://github.com/zhaojun1998/Valine-Admin 切换到部署标签页，分支使用 master，点击部署即可： 配置变量我们需要设置如下参数： 必选参数 SITE_NAME : 网站名称。 SITE_URL : 网站地址, 最后不要加 / 。 SMTP_USER : SMTP 服务用户名，一般为邮箱地址。 SMTP_PASS : SMTP 密码，一般为授权码，而不是邮箱的登陆密码，请自行查询对应邮件服务商的获取方式。 SMTP_SERVICE : 邮件服务提供商，支持 QQ、163、126、Gmail、&quot;Yahoo&quot;、...... ，全部支持请参考 : Nodemailer Supported services。 — 如这里没有你使用的邮件提供商，请查看自定义邮件服务器 SENDER_NAME : 寄件人名称。 请注意：如果你使用企业邮箱，那么你需要添加其他参数，请参考下方的自定义邮件服务器 自定义邮件服务器如 SMTP_SERVICE 中没有你使用的邮件服务提供商, 也可以进行自定义。 参数配置如下: SMTP_HOST : 邮件服务提供商 SMTP 地址，如 qq : smtp.qq.com，此项需要自行查询或询问其服务商。 SMTP_PORT : 邮件服务提供商 SMTP 端口, 此项需要自行查询或询问其服务商。 SMTP_SECURE : 是否启用加密, 默认为 true，一般不需要设置，如有特殊请自行配置。 此项需要自行查询或询问其服务商。 注: 配置自定义邮件服务器的话，请不要同时配置 SMTP_SERVICE。当 SMTP_SERVICE 未配置时才会启用自定义邮件服务。 休眠策略WEB服务免费版的 LeanCloud 容器，是有强制性休眠策略的，不能 24 小时运行： 每天必须休眠 6 个小时 30 分钟内没有外部请求，则休眠。 休眠后如果有新的外部请求实例则马上启动（但激活时此次发送邮件会失败）。 分析了一下上方的策略，如果不想付费的话，最佳使用方案就设置定时器，每天 7 - 23 点每 20 分钟访问一次，这样可以保持每天的绝大多数时间邮件服务是正常的。 首先需要先配置下 Web 主机的域名，使用定时器时要用到。配置方式如下。 后台登录需要账号密码，需要在这里设置，只需要填写 email、password、username，这三个字段即可, 使用 email 作为账号登陆即可。（为了安全考虑，此 email 必须为配置中的 SMTP_USER 或 TO_EMAIL， 否则不允许登录） LeanCloud 自带定时器[推荐]首先需要添加环境变量，ADMIN_URL：Web 主机域名，如图所示（添加后重启容器才会生效）： 注意, LeanCloud 最近更新了定时器校验规则, 需要将 Cron 表达式写为: 0 */20 7-23 * * ? 高级功能自定义邮件模板目前内置了两款主题，分别为 default 与 rainbow， 需要在 云引擎 -&gt; 设置 -&gt; 环境变量 中配置参数 TEMPLATE_NAME，默认为 default。 此配置会去寻找 template\\{TEMPLATE_NAME} 目录下的 notice.ejs与 send.ejs 模板文件，分别用于通知站长和通知游客，另外欢迎提供邮件主题样式。 为什么我收不到邮件？ 请确认评论时留下的邮箱不是环境变量里的 SMTP_USER 或 TO_EMAIL 里的邮箱，原因详见 7.30 更新日志。 请确认修改环境变量后已重启容器。 对于 QQ / 网易 163 邮箱，请确认你输入的是 SMTP 的授权码，而不是登陆密码。QQ邮箱获取授权码 网易邮箱获取授权码 其他更多功能请参考项目地址： 项目地址","categories":[{"name":"valine","slug":"valine","permalink":"https://mrhuanhao.cn/categories/valine/"}],"tags":[{"name":"valine","slug":"valine","permalink":"https://mrhuanhao.cn/tags/valine/"}]},{"title":"【基础篇】hexo博客搭建教程","slug":"hexobase","date":"2020-03-23T13:48:46.000Z","updated":"2020-04-20T09:56:26.365Z","comments":true,"path":"2020/03/23/hexobase/","link":"","permalink":"https://mrhuanhao.cn/2020/03/23/hexobase/","excerpt":"【基础篇】搭建hexo博客（一）作者：Huanhao bilibili：Mrhuanhao 前言你是否想拥有属于自己的博客？你是否无奈与自己不会写网站而烦恼？ 不要担心，本系列教程将会实现你白嫖的愿望，连服务器都不需要买，就算没有任何编程基础也可以学会的搭建博客教程","text":"【基础篇】搭建hexo博客（一）作者：Huanhao bilibili：Mrhuanhao 前言你是否想拥有属于自己的博客？你是否无奈与自己不会写网站而烦恼？ 不要担心，本系列教程将会实现你白嫖的愿望，连服务器都不需要买，就算没有任何编程基础也可以学会的搭建博客教程 下面来看看这些好看的个人博客： http://fech.in/ https://xaoxuu.com/ https://nexmoe.com/ https://sakura.hojun.cn/ 以上的博客你是否都心动了呢？我想说的是，它们都是由hexo搭建的，等你学完了基础和进阶篇，上面展示的博客你都可以实现，就让我们一步步来吧！ 这是一个系列教程，有基础篇和进阶篇，让我们看看这两个教程实现的效果 【基础篇】 学会安装相应需要的依赖软件 学会更换主题 学会基本的站点配置 知道怎么生成文章并编辑 上传你的博客并拥有一个可以访问的地址 进阶篇 学会用markdown基本语法编写你的文章 学会如何搭建一个免费的图床并使用 学会进一步配置主题并了解所有主题的基本功能 拥有自己的域名并绑定 使用一些插件让自己博客更完美 备份 搭建之前的准备安装nodejs 下载地址： http://nodejs.cn/download/ 选择windows安装包.msi安装 运行安装包，我们默认选择c盘 在这里选择Add to PATH然后点Next继续就行了 安装Git 下载地址：https://git-scm.com/ 点这里即可下载最新版本，如果你的下载速度比较慢可以选择下面的链接下载 https://www.lanzous.com/i9s7tib 运行安装包，选择合适的安装位置，然后点Next 后面的安装步骤全部只要点Next就行了，不需要我们多余配置 验证nodejs是否安装配置成功我们安装完Git后，在桌面右键会有Git Bash Here，我们直接点开 会出来一个终端，我们分别执行下面的命令 12$ node -v$ npm -v 如果输出了版本号，那么证明配置成功，如果没有版本号，请重新安装nodejs（检查是否勾选Add to Path），或者手动为nodejs添加环境变量 安装cnpm在git bash里面执行下面的命令 1$ npm install -g cnpm --registry=https://registry.npm.taobao.org 检查cnpm是否安装成功 执行 1$ cnpm -v 如果输出版本号就是安装成功了 安装hexo和初始化博客安装hexo在git bash执行下面的命令安装hexo 1$ cnpm install hexo-cli -g 初始化博客选择一个文件夹，然后右键打开git bash 例如：我在F盘新建了一个blog文件夹，就在blog文件夹下打开git bash 然后这里会显示你当前目录 然后执行 1$ hexo init 到Install dependencies的时候你可能会卡住，这是大多数人基本都会遇到的 我们只需要在这里的时候结束命令，按Ctrl + c就可以结束命令 然后执行下面这个命令，就可以使用国内的镜像为你完成博客的初始化工作 1$ cnpm install 其他方法： git clone https://e.coding.net/huanhao/hexoblog.git cnpm install 然后继续下面的步骤 等待命令完成后，就完成了初始化，现在就可以预览我们的博客了 执行下面这个命令 注意：请不要结束命令或者关闭终端 1$ hexo s 然后会出来一段http开头的网址，我们复制下来然后在浏览器打开 就会出现这么一个页面了 更换主题你是否觉得上面的默认主题有点不好看呢？现在教你如何替换主题 hexo的所有主题都在下面这个地址： https://hexo.io/themes/ 你可能会在这个地址看到很多好看的主题，但是我们要慢慢来，有些主题的配置难度还是很高的 我们要找一个功能齐全，配置简单的主题练练手 就是这个新手入门hexo必备的Next主题 预览效果：https://theme-next.org/ 项目地址：https://github.com/theme-next/hexo-theme-next 配置文档：https://theme-next.org/docs/getting-started/ 如你所见，其实每个主题都会包含这个三个东西 预览效果 项目地址 配置文档 点击主题的图片可以打开预览地址，点击主题的标题可以打开项目地址 配置文档我们需要自己去项目地址找，大多数主题的项目地址都是英文，大家可以开翻译找一下 如何下载主题方法1打开主题的项目地址后，点击Clone or download 然后复制https开头的地址 然后在你的博客文件夹下面打开git bash 执行： 1git clone 复制的地址 themes/主题名字 如图： 现在给你解释一下这个命令 git clone 代表克隆，后面接上一串下载地址，最后面的themes/next是把文件夹下载到主题目录下，并把主题文件命名为next 方法2如果你觉得比较麻烦，还有第二个办法 打开主题项目地址，然后点击Clone or download，然后点击Download ZIP 这样可以下载主题文件压缩包，前提是你已经登入了github（没有账号的，请自己注册一下） 然后解压压缩包，把文件夹放在博客目录下的themes目录，并把文件夹命名为主题的名字 修改配置文件在博客的目录下有一个叫_config.yml的文件 将它打开 找到themes这一行，然后将主题名字修改为next 这样的话，主题就成功更换了 预览主题在博客目录打开git bash 执行 1hexo s 还是会出现一段浏览地址，我们在浏览器打开就行了 注意：有些主题你更换之后是暂时无法预览的，因为有的主题还需要安装它需要的依赖，这一般都会在主题的文档里面提到，只有安装它的依赖之后才可以正常预览，这里暂时不做说明，会在hexo教程进阶篇说到 配置主题这里不会做详细的配置介绍，在进阶篇会完整说明 我们需要认识两个文件 站点配置文件 指的是博客根目录下的_config.yml 主题配置文件 指的是某个主题下的_config.yml 它们的名字都叫_config.yml但是你不能弄混淆 在我们看主题文档配置的时候，是必须要分清这两个概念的，不然会报错 我们先来几个基本的配置 设置语言在Next主题的文档里面提到了如何更换语言 它要求我们更改的是站点配置文件，并且给出了代码示范 我们打开站点配置文件 按照要求，将language的配置改成zh-CN，然后保存文件 其他设置现在再来尝试一个 Next主题里面有个Scheme选项，可以更改主题的外观 根据要求，我们需要更改的是主题配置文件 打开主题配置文件，我们尝试scheme改成双栏，也就是需要修改成Pisces 现在已经修改过两个配置了，为了检验是否修改成功，我们需要预览一下主题 在博客根目录下执行 1hexo s 然后打开链接 可以看到都设置成功了 因为这个主题的主题文档是英文的，所以可能配置起来不太方便，我这里有一个中文的 是别人翻译的，不过现在不是最新版本的翻译 http://theme-next.iissnan.com/ 如果你有能力，可以自己挑一个主题进行简单配置，在进阶篇中会使用其他主题为你展示更详细的配置教程 生成文章的编辑工具在博客根目录下面执行： 1$ hexo new \"文章链接\" 例如：你想创建一个名为”我的第一个博客“的文章 可以执行： 1$ hexo new \"my-first-blog\" 文章链接建议是英文，然后会显示你的文章生成的目录，每次生成的文章都固定在你的博客根目录下面的source/_posts下 可以看到是一个后缀为.md的文件，这个其实是一个markdown文件，如果你不知道markdown是什么，在进阶篇会告诉你，就算你不会markdown，你可以暂时把这个当成txt文件 我建议你安装Typora编辑.md文件 https://www.typora.io/ 按照目录打开my-firsy-blog.md文件，可以看到一个横线上面有一段信息 这里面是存放你博客信息的地方 title 文章标题 date 文章日期 tag 文章标签 （暂时不说明如何配置，进阶篇会讲到） 然后这时候你可以修改文章标题，并且在横线下面输入你文章的内容 保存之后，你可以在博客根目录打开git bash 执行 1$ hexo s 记得：预览博客都是这个命令 部署你的博客现在我们的博客都是只能本地预览，如何将我们的上传到一个地方，然后通过域名访问呢？ 你可能觉得需要一个服务器再买个域名绑定，我可以告诉你都不需要 下面介绍两种部署方法 先来个对比 github： 国外网站，是英文 访问速度较慢 不需要实名认证 域名形式可以自定义 coding： 国内的平台，网站是中文 访问速度快 部署网站需要实名认证，只需要填写身份证号即可 域名是随机给的，所以很长而且不能自定义 如果你有自己的域名，github和coding都可以绑定域名 coding https://coding.net/user 注册一个coding的账号，这里不做演示 然后按照图片新建一个项目 选择devops 填入相关信息，记得勾选启用README.cd文件初始化项目 然后完成创建 我们暂时不能直接上传，需要进行一些配置，如下： 接下来需要我们创建一个git秘钥 打开git bash（不要求在哪个目录） 执行： “这里面是你的邮箱” 不管出现什么信息，你只需要回车就可以了 1$ ssh-keygen -t rsa -C “your_email@youremail.com“ 然后执行 1$ cat ~/.ssh/id_rsa.pub 会输出你的秘钥，我们复制输出信息就行了 然后点击头像，打开个人设置–选择SSH公钥–新增公钥 然后将你复制的秘钥粘贴进去，记得勾选永久有效 然后打开git bash 执行： 1$ ssh -T git@git.coding.net 会提示你下面这个，输入yes回车就行了 1Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])? 接下来打开你的项目选择SSH，然后复制右边git开头的地址 打开站点配置文件 修改deploy信息 1234deploy: type: git repo: 你复制的地址 branch: master 例如： 在博客根目录下打开git bash 分别执行下面的命令： yourname是你的名字 youremail是你的邮箱 12$ git config --global user.name \"yourname\"$ git config --global user.email \"youremail\" 然后安装上传插件 1cnpm install hexo-deployer-git --save 上传 以上的配置完成之后，就可以上传了 在博客根目录下打开git bash，执行下面的命令就可以上传了 1hexo g -d 然后打开项目，打开构建与部署–静态网站–立即发布静态网站 注意：coding需要实名认证，只需要你输入身份证号就可以了，不用担心泄露隐私，因为coding现在是腾讯的 我们只要填写网站名称就行了，然后保存 因为是刚构建的网站，所以要手动部署一下，以后上传就不需要手动部署 然后访问所给的地址，那个就是我们网站的地址了 之后每次修改完博客要上传的时候，只需执行上传命令 github部署你还可以使用github部署你的博客 这里不演示如何注册账号 创建一个仓库 仓库名必须是用户名 + .github.io 然后勾选初始化README 我们暂时不能直接上传，需要进行一些配置，如下： 接下来需要我们创建一个git秘钥 打开git bash（不要求在哪个目录） 执行： “这里面是你的邮箱” 不管出现什么信息，你只需要回车就可以了 1$ ssh-keygen -t rsa -C “your_email@youremail.com“ 然后执行 1$ cat ~/.ssh/id_rsa.pub 会输出你的秘钥，我们复制输出信息就行了 然后点击头像，点击Settings–SSH·····–New SSH Key 粘贴你复制的秘钥 然后打开git bash 执行： 1$ ssh -T git@github.com 会提示你下面这个，输入yes回车就行了 1Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])? 打开项目，点击绿色按钮，点击Use SSH 复制git开头的地址 打开站点配置文件 修改deploy信息 1234deploy: type: git repo: 你复制的地址 branch: master 例如： 在博客根目录下打开git bash 分别执行下面的命令： yourname是你的名字 youremail是你的邮箱 12$ git config --global user.name \"yourname\"$ git config --global user.email \"youremail\" 然后安装上传插件 1cnpm install hexo-deployer-git --save 上传 以上的配置完成之后，就可以上传了 在博客根目录下打开git bash，执行下面的命令就可以上传了 1hexo g -d 然后打开项目，点击Settings 往下滑找到Github pages 点击none 选择master branch 之后你会得到一个地址，这个就是你的网站地址了 教程结束，进阶篇请期待","categories":[{"name":"搭建网站","slug":"搭建网站","permalink":"https://mrhuanhao.cn/categories/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"},{"name":"hexo","slug":"搭建网站/hexo","permalink":"https://mrhuanhao.cn/categories/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://mrhuanhao.cn/tags/hexo/"}]},{"title":"【hexo博客进阶】2.图床的使用和搭建","slug":"picee","date":"2020-03-23T13:47:16.000Z","updated":"2020-04-20T09:56:26.381Z","comments":true,"path":"2020/03/23/picee/","link":"","permalink":"https://mrhuanhao.cn/2020/03/23/picee/","excerpt":"前言在markdown的学习里面，我们知道只有插入超链接的图片，才能使博客速度加快，所以本教程教你如何使用图床，如果你希望自己搭建一个，也会在本教程提到","text":"前言在markdown的学习里面，我们知道只有插入超链接的图片，才能使博客速度加快，所以本教程教你如何使用图床，如果你希望自己搭建一个，也会在本教程提到 使用sm.ms图床在网上有很多免费的图床例如： https://sm.ms/ 点击中间的上传区域，可以打开你的文件夹进行选择要上传的图片，你还可以直接拖拽图片到中间，甚至可以粘贴剪切板的图片。 然后点击Upload上传图片，你还可以选择多个图片批量上传 之后在下方有不同格式的链接，你可以复制markdown的格式，直接粘贴到文章即可 如何使用picee如果是以前，我会推荐你使用picgo，这是一款图床软件，可以配置多个平台的图床，但是经常会因为网络问题，上传失败，于是我找到了替换他的，就是picee 这是一个大佬写的浏览器插件，支持你上传图片到Github，然后自动获取github的链接 这种方法有以下优点： 可以自己管理的免费图床 不经常出现上传失败的现象 可快捷输出图片的链接 作为浏览器插件，小巧好用 我将picee进行了优化，把他做成了网页，并且输出的是经过jsdelivrcdn加速的地址，可以让你的博客访问速度达到极致化！ 使用方法十分简单： 这是我搭建的网页地址，是一个静态网页，我还进行了汉化，有中文页面 https://picup.mrhuanhao.cn/ 可以看到上方有两个登入方式，一个是token一个是账号密码登入 随便选择一个方式进行登入，我选账号密码，然后点击Auth登入 然后在这里，上方的左边是输入用户名/仓库名 右边是输入文件夹名，如果你没有创建文件夹，无需担心，这个工具会为你自动创建 输入完毕记得打钩 如何自己搭建picee项目地址： https://github.com/jrainlau/picee 我优化之后的项目地址： https://huanhao.coding.net/p/picup 你可以直接使用我优化后的项目，直接部署就可以用了，如何你想进一步进行优化，可以提交合并请求给我哦！","categories":[{"name":"picee","slug":"picee","permalink":"https://mrhuanhao.cn/categories/picee/"}],"tags":[{"name":"picee","slug":"picee","permalink":"https://mrhuanhao.cn/tags/picee/"},{"name":"图床","slug":"图床","permalink":"https://mrhuanhao.cn/tags/%E5%9B%BE%E5%BA%8A/"}]},{"title":"【hexo博客进阶】1.Markdown语法","slug":"markdown","date":"2020-03-23T13:47:10.000Z","updated":"2020-04-20T09:56:26.376Z","comments":true,"path":"2020/03/23/markdown/","link":"","permalink":"https://mrhuanhao.cn/2020/03/23/markdown/","excerpt":"前言如果你想让你的博客，看起来更加美观，学习markdown是必要的，你不需要存在害怕的心理，因为markdown十分简单，就是记住几个符号就行了，不是你想象的他和学习编程语言一样复杂。 在开始之前，我们需要一个markdown的编辑器，来帮助我们识别markdown的文本，我推荐你使用Typora https://www.typora.io/","text":"前言如果你想让你的博客，看起来更加美观，学习markdown是必要的，你不需要存在害怕的心理，因为markdown十分简单，就是记住几个符号就行了，不是你想象的他和学习编程语言一样复杂。 在开始之前，我们需要一个markdown的编辑器，来帮助我们识别markdown的文本，我推荐你使用Typora https://www.typora.io/ 教程顺序参考https://www.runoob.com/markdown/ 标题语法展示： 123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 我们常常需要用到标题，在markdown中标题使用#号表示，一个#代表1级标题，一共有6个级别，他们的大小依次变小 段落在markdown里面段落没有语法，但是你还是需要注意怎么划分段落 如果你一直编辑一段文字，没有空格两个以上并且按下回车键（换行），这一段文字就自成一段 在Typora里面只需要回车换行 字体在markdown里面也有斜体粗体，语法如下： 123456*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___ 我不太建议你用下划线，因为下划线会连在一起，不好区分数量，建议使用下面的语法形式： 123*斜体文本***粗体文本*****粗斜体文本*** 分隔线在你编辑很多文字之后，如果不使用分隔线，可能会让读者错乱，使用分隔线会有一种层次感。 分隔线在一行中，使用三个以上的星号、减号、下划线来建立(可以隔开) 语法： 12345***----------_ _ _ 删除线删除线就是给文本加上删除线，在文本两端使用两个波浪线~ 1~~文本~~ 下划线在markdown里面并没有关于下划线的语法，但是markdown允许你插入一些基本的HTML代码，下划线语法如下： 1&lt;u&gt;这是一个有下划线的文本&lt;/u&gt; 列表列表分为有序和无序 无序列表无序列表使用星号*、加号 +、减号 - 语法如下： 123456789101112* 第一项* 第二项* 第三项+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项 注意需要和符号之间保持一个空格 有序列表有序列表其实很简单，就是数字加上. 文本使用空格隔开 1231. 第一项2. 第二项3. 第三项 列表嵌套有序和无序可以一起使用，只需要在子列表的选项添加四个空格 语法： 1234561. 第一项： - 子列表1 - 子列表22. 第二项： - 子列表1 - 子列表2 区块区块是用来引用的，比如链接或者一段文本 在段落的开头使用&gt;符号，使用空格，隔开文本 123&gt; 引用的内容&gt;&gt; 第二段引用的内容 在引用里面也是分段落的，我们不是使用回车，而是使用&gt;成单个一行 区块嵌套1234&gt; 引用&gt;&gt; 2&gt;&gt;&gt;&gt;&gt;3 代码块这是一个程序员专用的语法，代码块可以展示不同语言的代码，并且有不同的高亮显示，代码块语法如下: 上下使用三个点进行包裹，最顶上的可以写上代码的类型 12345​&#96;&#96;&#96;javascript$(document).ready(function () &#123; alert(&#39;RUNOOB&#39;);&#125;);​ 1234567891011121314151617181920212223242526272829![image](https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;kjhuanhao&#x2F;blogcdn&#x2F;hexo&#x2F;%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-03-15%20%E4%B8%8B%E5%8D%889.41.43.png)***# 链接插入链接有两种方式：* 第一种：直接插入https:&#x2F;&#x2F;mrhuanhao.cn&#x2F;这种方式适用于短的链接，但是过长的链接可能会看起来不得当* 第二种：使用markdown语法插入其实就是让一段文本，拥有跳转功能语法如下：&#96;&#96;&#96;md[链接名称](链接地址)或者&lt;链接地址&gt; 例如： 1[huanhao的主页](https://mrhuanhao.cn/) 1&lt;https:&#x2F;&#x2F;mrhuanhao.cn&#x2F;&gt; 图片在一个文章里面插入图片是必不可少的，本地的文章可以使用本地图片，在你上传博客之后，也必须上传本地图片，但这样会有弊端。 使用本地图片会严重拖慢博客速度，我们需要使用超链接进行插入图片，也就是把图片上传的某个服务器上面，然后获取图片在服务器上面的地址。 但是我们也可以使用免费的托管或者图床，上传我们的图片，本篇教程不教图床的使用，下篇文章将会提到。 插入图片的语法： 1![图片描述](图片的链接) 表格在markdown里面是可以插入表格的，可以体现一些数据 语法： 1234| 表头 | 表头 || ---- | ---- || 单元格 | 单元格 || 单元格 | 单元格 | 让表格自动对其方式 居右-: 居左:- 居中:-: 语法如下： 1234| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 | 我们只需要在第二行插入分隔线 转义字符因为在markdown的语法里面，用了一些特定的符号作为语法，如果我们想输出符号，而不是被识别成语法，就需要使转义字符 只需要使用反斜杠，然后加上下面的某个符号即可 123456789101112\\ 反斜线&#96; 反引号* 星号_ 下划线&#123;&#125; 花括号[] 方括号() 小括号# 井字号+ 加号- 减号. 英文句点! 感叹号 不使用转义字符： 使用了转义字符 其他高级语法在大多的markdown编辑器中，可能无法展示高级语法，以上的语法完全够用，你也可以无需学习高级语法。 高级语法有如下内容(只展示部分）： 数学公式 12345678$$\\mathbf&#123;V&#125;_1 \\times \\mathbf&#123;V&#125;_2 = \\begin&#123;vmatrix&#125; \\mathbf&#123;i&#125; &amp; \\mathbf&#123;j&#125; &amp; \\mathbf&#123;k&#125; \\\\\\frac&#123;\\partial X&#125;&#123;\\partial u&#125; &amp; \\frac&#123;\\partial Y&#125;&#123;\\partial u&#125; &amp; 0 \\\\\\frac&#123;\\partial X&#125;&#123;\\partial v&#125; &amp; \\frac&#123;\\partial Y&#125;&#123;\\partial v&#125; &amp; 0 \\\\\\end&#123;vmatrix&#125;$&#123;$tep1&#125;&#123;\\style&#123;visibility:hidden&#125;&#123;(x+1)(x+1)&#125;&#125;$$ HTML元素 1&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 流程图 1234567891011``flowst=&gt;start: 开始框op=&gt;operation: 处理框cond=&gt;condition: 判断框(是或否?)sub1=&gt;subroutine: 子流程io=&gt;inputoutput: 输入输出框e=&gt;end: 结束框st-&gt;op-&gt;condcond(yes)-&gt;io-&gt;econd(no)-&gt;sub1(right)-&gt;op​","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://mrhuanhao.cn/tags/hexo/"},{"name":"markdown","slug":"markdown","permalink":"https://mrhuanhao.cn/tags/markdown/"}]},{"title":"【MAC风】kde美化","slug":"prettykde","date":"2020-03-23T13:45:08.000Z","updated":"2020-04-20T09:56:26.386Z","comments":true,"path":"2020/03/23/prettykde/","link":"","permalink":"https://mrhuanhao.cn/2020/03/23/prettykde/","excerpt":"【Mac风格kde】Archlinux美化教程本文章的教程会在bilibili录成视频版本 关注我：Mrhuanhao","text":"【Mac风格kde】Archlinux美化教程本文章的教程会在bilibili录成视频版本 关注我：Mrhuanhao 安装全局主题打开设置，打开全局主题，然后点击【Get Now Global Themes】 找到【McMojave LAF】主题，然后安装 如果你想用黑暗主题，先选择暗色微风应用，然后再继续下面的步骤 打开plasma选择McMojave ，然后应用 图标图标的主题是McMojave-circle 建议安装blue 光标安装完全局主题会有McMojave Cursors GTK3风格McMojave 窗口装饰McMojave Aurorae 修改顶部直接拖拽继续了 桌面特效模糊Blur 窗口管理–kwin脚本force blur kvantum安装 1sudo pacman -S kvantum-qt5 点change/delete theme 选择KvMojave 然后选择use this theme 点Configure arctive theme 勾选transparent menu title 打开compositing *** 将window opacity by 改成 5% 将menu opacity 改成 15% 记得点击save保存 应用程序风格 然后建议重启一下系统，让设置生效 面板（顶部栏）只需要我们把下面的面板删掉，新建一个空白面板移动上去就可以了 然后添加自己喜欢的组件，显示标题的部件： application title dock栏安装 1sudo pacman -S latte-dock 我的设置参数","categories":[{"name":"linux","slug":"linux","permalink":"https://mrhuanhao.cn/categories/linux/"}],"tags":[{"name":"kde","slug":"kde","permalink":"https://mrhuanhao.cn/tags/kde/"},{"name":"archlinux","slug":"archlinux","permalink":"https://mrhuanhao.cn/tags/archlinux/"},{"name":"linux","slug":"linux","permalink":"https://mrhuanhao.cn/tags/linux/"}]},{"title":"【桌面篇】ArchLinux安装kde桌面","slug":"archlinuxdesktop","date":"2020-03-23T13:42:35.000Z","updated":"2020-04-20T09:56:26.338Z","comments":true,"path":"2020/03/23/archlinuxdesktop/","link":"","permalink":"https://mrhuanhao.cn/2020/03/23/archlinuxdesktop/","excerpt":"为你的arch安装kde桌面","text":"为你的arch安装kde桌面 ArchLinux安装配置手册[桌面篇]现在你的U盘可以拔掉了，重启后会发现和刚刚没什么区别，还是命令行的界面，别着急现在就带你安装桌面环境。 连接网络首先检查一下网络是否连接成功 1ping www.baidu.com 如果没有那就执行下面的命令连接，相信你知道怎么连接。 有线网络 1dhcpcd 无线网络 1wifi-menu 添加用户如果这里不添加，安装完桌面后，登录界面没有用户出现(root用户不会出现在gdm登录界面) 而且使用root权限会有危险 12useradd -m -g users -s /bin/bash xxxx #添加xxxx用户，用户名你自定义passwd xxxx #为xxxx用户设置密码 配置新用户的sudo权限1vim /etc/sudoers #编辑配置文件 在root ALL = (ALL) ALL下添加xxxx ALL = (ALL) ALL;输入:wq!强制保存退出vim 安装声卡驱动1pacman -S alsa-utils pulseaudio-alsa Arch Linux默认开启了声音支持，默认静音 可通过alsamixer命令＋字母[M] 取消静音 方向键上下调节音量 字母[M]取消静音 [Q],[W],[E] 增大 左,右,通道 的音量 [Z],[X],[C] 减小 左,右,通道 的音量 安装显卡驱动123456lspci | grep VGA #查看显卡型号(例如：Intel Corporation HD Graphics 530)00:02.0 VGA compatible controller: Intel Corporation HD Graphics 530 (rev 06) lspci | grep 3D #查看独显型号(例如：NVIDIA Corporation GM107M [GeForce GTX 950M])01:00.0 3D controller: NVIDIA Corporation GM107M [GeForce GTX 950M] (rev a2) #(rev a2) 表示正在运行，如果是ff则未运行pacman -S 驱动包名字 参照下图根据你的显卡类型，选择相应驱动包 123xf86-video-intel #——Intelxf86-video-nouveau #——Geforce7xf86-video-304xx #——Geforce6/7 显卡类型 如果你还有独显NVIDIA可以使用,可以一并安装pacman -S xf86-video-intel nvidia 双显卡这里不提出方案，请查阅Arch wiki 安装X窗口系统123pacman -S xorg #安装xorgpacman -S xf86-input-synaptics #安装触摸板驱动pacman -S ttf-dejavu wqy-zenhei wqy-microhei #安装常用字体 安装桌面只展示KDE和GNOME，后面的进阶教程以KDE为主 KDEKDE桌面 安装plasma-meta元软件 1pacman -S plasma KDE应用和SDDM图形登录界面 12pacman -S kde-applications pacman -S sddm sddm-kcm 安装网络管理工具 1pacman -S networkmanager netctl 开启相关服务 此处需要root权限 1su 123systemctl enable NetworkManager systemctl enable sddmsystemctl enable dhcpcd 1reboot # 重启进入桌面 到这里恭喜你成功安装完桌面系统，赶快重启进入桌面吧！","categories":[{"name":"linux","slug":"linux","permalink":"https://mrhuanhao.cn/categories/linux/"}],"tags":[{"name":"kde","slug":"kde","permalink":"https://mrhuanhao.cn/tags/kde/"},{"name":"archlinux","slug":"archlinux","permalink":"https://mrhuanhao.cn/tags/archlinux/"},{"name":"linux","slug":"linux","permalink":"https://mrhuanhao.cn/tags/linux/"}]},{"title":"【系统篇】ArchLinux系统安装","slug":"archlinuxsystem","date":"2020-03-23T13:41:30.000Z","updated":"2020-04-20T09:56:26.341Z","comments":true,"path":"2020/03/23/archlinuxsystem/","link":"","permalink":"https://mrhuanhao.cn/2020/03/23/archlinuxsystem/","excerpt":"本教程为最新安装Linux的教程，想看更详细可以到我B站主页看视频教程本教程参考自 https://wiki.archlinux.org/index.php/Installation_guide本教程于2019.11.9日编写，请根据查阅时间参考本教程（官网安装方式未更新，则本教程保持最新状态）教程中的镜像更新时间：2019.11.01","text":"本教程为最新安装Linux的教程，想看更详细可以到我B站主页看视频教程本教程参考自 https://wiki.archlinux.org/index.php/Installation_guide本教程于2019.11.9日编写，请根据查阅时间参考本教程（官网安装方式未更新，则本教程保持最新状态）教程中的镜像更新时间：2019.11.01 ArchLinux安装配置手册[系统篇]本教程参考自 https://wiki.archlinux.org/index.php/Installation_guide 本教程于2019.11.9日编写，请根据查阅时间参考本教程（官网安装方式未更新，则本教程保持最新状态） 教程中的镜像更新时间：2019.11.01 作者：Huanhao bilibili：Mrhuanhao 转载请标明出处！ Mrhuanhao 安装前的准备镜像下载地址：https://archlinux.org/download/ 未使用过Linux的用户，建议先了解一下Linux 如果你是从HTTP镜像源下载的镜像，我建议你检查一下签名： https://wiki.archlinux.org/index.php/GnuPG 启动Live环境（1）制作启动盘 如果你是Windows用户，你可以使用Rufus来制作，具体使用方法你可以查阅一下百度。 如果你是Linux用户，你只需要使用dd命令即可，相信你肯定会的。 （2）进入Live环境 选择从带有 Arch 安装文件的媒介启动通常是在你电脑开机的时候按下某个按键，一般会在启动画面有提示。不同的主板按键不同。 当 Arch 菜单出现时，选择 Boot Arch Linux 并按 Enter 进入安装环境。 验证启动模式（重要）可以列出 efivars 目录以验证启动模式： 1ls /sys/firmware/efi/efivars 如果目录不存在，系统可能以 BIOS 或 CSM 模式启动，详见您的主板手册。 如果目录存在。系统就是以UEFI启动。 请记住你的启动模式！！！ 连接网络 请选择其中一种方式连接 1.连接网线 1dhcpcd 2.连接WiFi 1wifi-menu 3.使用ADSL宽带连接 12pppoe-setup #配置systemctl start adsl #连接ADSL 检查网络连接使用ping检查网络连接，如果看到是如图的样子，证明网络连接成功 1ping www.baidu.com Ctrl+c可以结束命令的运行 更新系统时间 使用 timedatectl 确保系统时间是准确的： 1timedatectl set-ntp true 建立硬盘分区查看硬盘情况 1fdisk -l 可以看到我有一块30G大小的硬盘，路径是/dev/sda,loop0是镜像文件 一般硬盘路径都是/dev/sda的格式，如果你有其他硬盘，也许会再多显示一个/dev/sdxx，请根据其详细信息辨认。 如果你有固态硬盘sda可能会变成nvme0n1 也可以通过lsblk查看硬盘信息 1lsblk 12345678910NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINTloop0 7:0 0 476.7M 1 loop /rn/archiso/sfs/airootfs #iso镜像sda 8:0 0 465.8G 0 disk #465.8G的机械硬盘sda └─sda1 8:1 0 465.8G 0 part /mnt/home #sda下的第一个分区sda1sdb 8:16 1 14.6G 0 disk #16G的启动盘├─sdb1 8:17 1 588M 0 part /runarchiso/bootmnt└─sda2 8:18 1 64M 0 partnvme0n1 259:0 0 119.2G 0 disk #119.2G固态硬盘nvme0n1 ├─nvme0n1p1 259:1 0 100G 0 part /mnt #nme0n1第一个分区nvme0n1p1└─nvme0n1p2 259:2 0 19.2G 0 part /mnt/boot/efi #nme0n1第二个分区nvme0n1p2 机械硬盘sda 固态硬盘nvme0n1 分区方案 BIOS with MBR 挂载点 分区 分区类型 建议大小 /mnt /dev/sda1 Linux 剩余空间 [SWAP] /dev/sda2 Linux swap More than 512 MiB UEFI with GPT 挂载点 分区 分区类型 建议大小 /mnt/boot /dev/sda1 EFI 系统分区 265–512 MiB /mnt /dev/sda2 Linux x86-64 root (/) 剩余空间 [SWAP] /dev/sda3 Linux swap More than 512 MiB 分区方案解读：如果你是以BIOS模式启动，你就无须创建和挂载/boot分区。 如果你是以UEFI模式启动，那你就必须创建和挂载/boot分区 开始分区 在那之前，建议你先了解一下以下分区的作用 1234&#x2F;&#x2F;home&#x2F;bootswap 使用cfdisk分区 BIOS选dos，UEFI的选gpt 以下的/dev/sdx字段都代表你的硬盘路径，请根据自身情况修改 1cfdisk /dev/sdx 通过左右方向键可以选择下面的选项，选择New然后回车 先新建/分区 输入大小然后回车即可创建分区 第一个/dev/sda1就是我们刚刚创建成功的分区 Free space 就是剩余的空间 新建/home分区 需要先把光标移到剩余空间，再新建哦！ 新建/boot分区（BIOS启动的不需要） 不需要太大，256M-512M就可以了 注意：/boot分区的建立方式还多一个步骤 选中新建的/boot分区，下面的光标移到Type选项 然后选中EFI System回车即可 新建swap分区 大小一般等于你的运行内存大小 也是和/boot分区差不多，要选择type 选中Linux swap然后回车即可 确认分区光标移动到write然后回车 输入yes回车确认 选中Quit，回车即可退出cfdisk 查看分区用lsblk即可，可以看到sda硬盘被分成了4个分区，正是我们刚才分的区 sda1 是我的/分区 sda2 是我的/home分区 sda3 是我的/boot分区 sda4 是我的swap分区 1lsblk 格式化分区当分区建立好了，这些分区都需要使用适当的文件系统进行格式化 注意：请根据自己的分区情况进行对应的格式化，例如我刚刚把sda1作为我的/分区且大小为14G /1mkfs.ext4 /dev/sda1 /home1mkfs.ext4 /dev/sda2 /boot（BIOS启动的不需要）1mkfs.fat -F32 /dev/sda3 swap12mkswap /dev/sda4swapon /dev/sda4 挂载分区/将/分区挂载到/mnt 1mount /dev/sda1 /mnt /home/mnt下创建/home文件 1mkdir /mnt/home 挂载/home分区 1mount /dev/sda2 /mnt/home /boot（BIOS启动的不需要）/mnt下创建/boot 1mkdir /mnt/boot 挂载引导分区 1mount /dev/sda3 /mnt/boot 更换镜像源1vim /etc/pacman.d/mirrorlist 按下/键，输入China，进入检索模式，搜到China的字样后回车,蓝色的光标就会出现在China的下面 但是目前显示的这个源我不太想要，按下n键可以跳到下一个China源，正好是我要的清华镜像源 为什么不用科大镜像源？ 答：因为不知道是什么原因，每次我安装arch的时候用科大的源会出现连接不到的问题，你也可以找科大的源使用。 然后按下2dd剪切，按下gg回到顶部，按下p粘贴 建议在清华源的下面再加上一条阿里源，以防安装软件的时候出错 1Server = http://mirrors.aliyun.com/archlinux/$repo/os/$arch 按i进入编辑模式然后输入，按ESC退出编辑模式 按下：(也就是Shift + ;)，然后输入wq回车，即可保存退出 安装基础软件包base 软件包并没有包含全部 live 环境中的程序，packages.x86_64 页面包含了它们的差异。需要额外安装： 管理所用文件系统 的用户工具 访问 RAID 或 LVM 分区的工具 未包含在 linux-firmware 中的额外固件 联网需要的程序 文本编辑器, 访问 man 和 info 页面的工具： man-db, man-pages 和 texinfo. 如果你还想安装其他软件包组比如 base-devel，请将他们的名字添加到 pacstrap 后，并用空格隔开。你也可以在 #Chroot 之后使用 pacman 手动安装软件包或组。 如果你看不懂上面在说什么，那你跟着我运行下面的命令就行了 1pacstrap /mnt base linux linux-firmware base-devel vi vim nano dhcpcd 配置系统Fstab 用以下命令生成 fstab 文件 (用 -U 或 -L 选项设置UUID 或卷标)： 1genfstab -U /mnt &gt;&gt; /mnt/etc/fstab Change root 到新安装的系统： 1arch-chroot /mnt 设置时区12ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtimehwclock --systohc 本地化设置 /etc/locale.gen 是一个仅包含注释文档的文本文件。指定您需要的本地化类型，只需移除对应行前面的注释符号（＃）即可，建议选择带 UTF-8 的项： 123vim /etc/locale.genen_US.UTF-8 UTF-8zh_CN.UTF-8 UTF-8 接着执行 locale-gen 以生成 locale 讯息： 1locale-gen 将 LANG=en_US.UTF-8 加入 /etc/locale.conf 1vim /etc/locale.conf 设置主机名 xxxxs是你的主机名（自己取个喜欢的名字） 1echo \"xxxx\" &gt;&gt; /etc/hostname 编辑 /etc/hosts文件，添加以下内容（xxxx为你的主机名） 1234vim /etc/hosts127.0.0.1 localhost.localdomain localhost::1 localhost.localdomain localhost127.0.1.1 xxxx.localdomain xxxx 设置root密码 使用passwd命令为root用户增加密码 1passwd 安装Intel-ucode（非Inter C PU不需要）1pacman -S intel-ucode 如果你的下载出错，可能是网络断开了，那就再连接一次网络即可 安装引导 如果你硬盘上还有别的系统，需要安装 os-prober。如果你的系统在别的硬盘单独引导，则不需要。 1pacman -S os-prober 对于 BIOS 系统： 123pacman -S grubgrub-install --target=i386-pc /dev/sdX # sdX 为你的安装硬盘grub-mkconfig -o /boot/grub/grub.cfg 对于 UEFI 系统： 123pacman -S grub efibootmgrgrub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUBgrub-mkconfig -o /boot/grub/grub.cfg 安装网络连接组件这里我提供两种方案，选一个就行(例如我：无线网络组件) 无线网络组件： 1pacman -S iw wpa_supplicant dialog netctl #无线网络 后面重启系统后可以使用wifi-menu命令连网 有线网络组件： 注意：笔记本用户千万别手欠，觉得自己笔记本也有网线插口就执行以下命令，否则系统安装好，DNS也会无法解析，除非你真的是使用网线方式连的网络 12systemctl enable dhcpcd #进入系统自动连网systemctl start dhcpcd #重启后执行此命令启动网络服务 重启系统到这里就安装完毕了 123exitumount -R /mntreboot 恭喜你已经安装完了系统，下一篇是安装桌面的指导","categories":[{"name":"archlinux","slug":"archlinux","permalink":"https://mrhuanhao.cn/categories/archlinux/"},{"name":"linux","slug":"archlinux/linux","permalink":"https://mrhuanhao.cn/categories/archlinux/linux/"}],"tags":[{"name":"archlinux","slug":"archlinux","permalink":"https://mrhuanhao.cn/tags/archlinux/"},{"name":"linux","slug":"linux","permalink":"https://mrhuanhao.cn/tags/linux/"}]},{"title":"关于常见进制的转换","slug":"binary","date":"2020-03-23T13:38:25.000Z","updated":"2020-04-20T09:56:26.345Z","comments":true,"path":"2020/03/23/binary/","link":"","permalink":"https://mrhuanhao.cn/2020/03/23/binary/","excerpt":"了解进制之间是如何进行转换的","text":"了解进制之间是如何进行转换的 二进制二进制是逢二进一 第一行和第二行相加 1 0 1 1 1 1 1 1 1 1 0 1 0 二进制转为十进制我们把右边当作低位,左边是高位. 举个例子: 3 2 1 0 位数 1 0 1 0 二进制数 2^3^ 0 2^1^ 0 = 10 点拨: 可以看到3210是固定组,往左越来越大,我们从右往左看,二进制数只有0和1,当数字为0时代表没有则为0,如果数字是1,我们就要考虑当前位置对于的位数是多少,例如: 从右往左的第二个数字就是1,而当前位数是1,所以就是2的1次方.最后把所有转换的数字加起来即可. 总结: 位数 = n,遇到1考虑n,2的n次方 上面的例子有个特点就是8,4,2,1这是所有二进制数转十进制通用的 1110 = 14 (8+4+2+0) 1010 = 10 (8+0+2+0) 0001 = 1 (0+0+0+1) 八进制八进制就是逢8进1 第一行和第二行相加 7 0 1 1 1 2 1 5 1 0 2 2 6 八进制转十进制 3 2 1 0 位数 1 0 0 1 八进制数 8^3^ 0 0 8^0^ = 513 上面是个简单的例子,下面进阶一下 3 2 1 0 位数 3 0 0 5 八进制数 3*8^3^ 0 0 5*8^0^ = 1541 总结: 原数 * 8的n次方(位数=n) 十六进制十六进制就是逢十六进一 f 9 9 1 1 2 9 c 1 0 c 2 d 因为我们要把数字转为十六进制,所以大于等于10的数字我们用字母代替 A为10,B为11以此类推 十六进制转十进制 3 2 1 0 位数 1 0 0 1 十六进制数 16^3^ 0 0 16 = 4097 3 2 1 0 位数 0 2 4 0 十六进制数 0 2*16^2^ 4*16^1^ 0 = 576 总结: 原数 * 16的n次方(位数=n) 十进制转X进制二进制将要转换的数字直接除二,最后商为0为止 要转换的数字 商 余数 56 28 0 28 14 0 14 7 0 7 3 1 3 1 1 1 0 1 所以56的二进制是111000(从下往上排列) 八进制 要转换的数字 商 余数 99 12 3 12 1 4 1 0 1 所以99的八进制是143(从下往上排列) 十六进制 要转换的数字 商 余数 498 31 2 31 1 15 1 0 1 所以498的十六进制是1f2(从下往上排列) 二进制,八进制,十六进制之间的转换二进制和八进制 八进制的1位对应二进制的3位 二进制&gt;&gt;八进制10111101010101010010101 我们把这个二进制数字进行分组,每组3位 可以分为 010 111 101 010 101 010 010 101 然后按照二进制规律转换 分别对应2 7 5 2 5 2 2 5 这个数字就是八进制数 八进制&gt;&gt;二进制1 2 4 5 6 7 直接把每位数字对应的数进行转换,使用二进制规律8,4,2,1 分别对应,也是从右往左 001 010 100 101 110 111 二进制和十六进制二进制&gt;&gt;十六进制 十六进制的1位对应二进制的4位 010111101010101010010101 我们把这个二进制数字进行分组,每组4位 可以分为 0101 1110 1010 1010 1001 0101 然后按照二进制规律转换 分别对应5 e a a 9 5 十六进制&gt;&gt;二进制9 a 8 f 7 直接把每位数字对应的数进行转换,使用二进制规律8,4,2,1 分别对应,也是从右往左 1001 1010 1000 1111 0111 扩展八进制和十六进制我们要把欲转换的数字转换为二进制,然后再进行转换 八进制&gt;&gt;十六进制37231 转为二进制 11111010011001 转为十六进制,分组每组4位 0011 1110 1001 1001 对应的数为3 e 9 9 十六进制&gt;&gt;八进制8fc6 转为二进制 1000111111000110 转为八进制,分3组每组3位 001 000 111 111 000 110 对应的数为:1 0 7 7 0 6","categories":[{"name":"编程","slug":"编程","permalink":"https://mrhuanhao.cn/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"进制","slug":"进制","permalink":"https://mrhuanhao.cn/tags/%E8%BF%9B%E5%88%B6/"}]},{"title":"【pic+js+gh】免费高速图床方案","slug":"picgo","date":"2020-03-23T13:37:23.000Z","updated":"2020-04-20T09:56:26.383Z","comments":true,"path":"2020/03/23/picgo/","link":"","permalink":"https://mrhuanhao.cn/2020/03/23/picgo/","excerpt":"搭建一个自己的免费图床工具","text":"搭建一个自己的免费图床工具 本文用到的工具或网站PicGo jsdelivr github 速度对比Github的速度： jsdelivrCDN的速度： 下载PicGo首先进入PicGo的下载地址 选择最新版本下载，根据自己的系统下载对应的安装包，我这里是Windows 如果你下载的时候很慢，可以用特殊的方式下载，也可以用我的快速链接 https://www.lanzous.com/i5avbgd //2.1.2Windows版本 配置PicGo创建仓库首先创建一个github仓库，名字可以随便取，然后勾选README初始化仓库 生成token【进入github】-【点击头像】-【settings】-【developer settings】-【Personal access tokens】 点击【Generate new token】 自定义一个名字，然后勾选【repo】最后点绿色按钮创建即可 请复制你的token，它只显示一次，请妥善保管 配置github图床先打开你安装好的picgo然后左栏依次选择【图床设置】-【github图床】 1如果你打开picgo时没有直接出来界面，它可能藏在你的托盘图标处 仓库名格式是你的用户名/仓库名 分支是master token填我们刚刚生成的 存储路径可以填也可以不填，如果你填了img/，它就会上传到你仓库的img目录下 自定义域名的格式：https://cdn.jsdelivr.net/gh/用户名/仓库名 最后记得确定保存 上传图片点击上传区记得图床选【github图床】 直接将图片拖入即可上传 可以看到在你的仓库有了第一张图片，我上传了一个为1.png的图片 配合jsdelivr使用 链接格式：https://cdn.jsdelivr.net/gh/你的用户名/仓库名/文件路径 例如：https://cdn.jsdelivr.net/gh/kjhuanhao/testcdn/1.png 我们在上传的时候会自动复制这个格式的链接，大家可以可以直接复制查看 然后你就可以通过这个链接访问你的图片了","categories":[],"tags":[]},{"title":"manajro-i3wm","slug":"manjaro-i3","date":"2020-03-23T13:35:11.000Z","updated":"2020-04-20T09:56:26.374Z","comments":true,"path":"2020/03/23/manjaro-i3/","link":"","permalink":"https://mrhuanhao.cn/2020/03/23/manjaro-i3/","excerpt":"这本来是我的一个视频稿子，但是忽然不想去做了，就放出这个稿子","text":"这本来是我的一个视频稿子，但是忽然不想去做了，就放出这个稿子 介绍这是一期关于manjaro的安装到开发环境配置i3wm的教程.我即将在manjaro_gnome里面演示 主要的软件或者工具 i3wm tmux nvim polybar compton ranger rofi fish alacritty 展示我的桌面 你需要做的备份好你自己的文件,开始和我一起安装和配置一个美观实用的开发环境 安装篇Windwos下制作一个启动盘 事前准备需要一个至少4G以上的U盘1.下载rufus2.使用DD写入即可3.重启电脑启动U盘Linux下制作一个启动盘 123sudo fdisk -l #查看U盘路径sudo umount /dev/sdb* #取消挂载U盘sudo mkfs.vfat /dev/sdb -I #格式化U盘 然后用dd命令 1sudo dd if=镜像路径 of=/dev/sdb(启动盘) #写入镜像 分区 挂载点/；主分区；安装系统和软件；分区格式为ext4； 挂载点/home；逻辑分区；相当于“我的文档”； 分区格式ext4 swap；逻辑分区；充当虚拟内存；大小可以等于内存大小；分区格式为swap /boot ；引导分区；逻辑分区；；分区格式为ext4； 建议第一次装linux的新手去百度了解一下 安装后的第一件事情 几乎所有linux你安装完成之后,我们都要进行更换镜像源的操作 1sudo pacman-mirrors -i -c China -m rank # 选ustc科大镜像源 然后进行更新 12sudo pacman -Syysudo pacman -Syyu 在/etc/pacman.conf加入 123[archlinuxcn]SigLevel = Optional TrustedOnlyServer = https://mirrors.ustc.edu.cn/archlinuxcn/$arch 导入秘钥 12sudo pacman -Syysudo pacman -S archlinuxcn-keyring pacman相关的命令pacman用法和介绍: https://wiki.archlinux.org/index.php/Pacman pacman视频介绍(来自TheCW): https://www.bilibili.com/video/av55190132 其他问题和建议 如果你系统用的是中文,你还需要安装一个字体,避免中文乱码 1sudo pacman -S wqy-microhei 新手建议 解决问题大法: 遇到软件使用问题看archwiki archwiki没有找到,没有关系 再看github的,对应仓库wiki 没有找到,没有关系 看看issues,有没有相同问题 遇到ERROR,不要着急 先查百度,或者bing 就算谷歌,也没有关系 仍未解决,切莫放弃 发个problem,who can help me 知乎,贴吧,群里也发 csdn也能考虑 提问之前必须think 提问的智慧要牢记 许多途径切勿放弃! archwiki: https://wiki.archlinux.org/ archwiki(中文): https://wiki.archlinux.org/index.php/Arch_Linux_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87) 提问的智慧:http://doc.zengrong.net/smart-questions/cn.html 遇到找不到的软件包看AUR,这是一个庞大的软件库 aur:https://aur.archlinux.org/ 配置篇安装fish 安装fish https://fishshell.com/ 1sudo pacman -S fish 查看fish位置 更换fish chsh -s 安装oh-my-fish插件 1curl -L https://get.oh-my.fish | fish 配置fish主题 安装i3i3是一个窗口管理器,可以高效管理你的桌面,管理你的窗口,窗口直接可以快速地切换,再配合一些小工具,除了浏览网页之类的,几乎是用不到鼠标,可以大大增加了你的工作效率 那么如何去安装和使用i3呢?在这之前我来带你安装一下linux 想要高效就先拥有一个好用的系统,例如archlinux,或者arch的发行版,衍生版 arch下的aur我觉得几乎是万能的,我从来没有遇过什么软件包不存在这种问题 我这里就演示如何安装manjaro 1sudo pacman -S i3 重启 选择i3 安装rofirofi 1sudo pacman -S rofi clone 我的仓库dotfiles https://github.com/kjhuanhao/dotfiles.git 移动配置文件到 ~目录下 安装依赖建议手动安装,因为脚本是一键式,容易出现部分没有安装问题,不容易差错 安装tmux和alacritytmux是一个终端复用器,类似GNU Screen Alacritty是一个终端模拟器 1sudo pacman -S tmux alacritty 移动tmux和alacrity的配置文件 tmux移动到~ 的.tmux.conf下 移动主题文件到~下 安装polyabr1sudo pacman -S polybar 移动polyabr配置文件 如果是虚拟机你无法使用我的的polybar配置,只能使用默认的 可以去看看默认的配置在哪,记得生成laught 安装nvim1sudo pacman -S neovim 移动i3配置文件 复制 到.config/i3下修改分辨率加上virual1 重载i3 安装compton1sudo pacman -S compton 建议去github看官方的安装方式,如果报错那就是缺少依赖 关于切换键位布局在我的配置文件里面有一份colemak的键位布局 其他推荐UP主:TheCW","categories":[{"name":"i3wm","slug":"i3wm","permalink":"https://mrhuanhao.cn/categories/i3wm/"}],"tags":[{"name":"manjaro","slug":"manjaro","permalink":"https://mrhuanhao.cn/tags/manjaro/"},{"name":"i3wm","slug":"i3wm","permalink":"https://mrhuanhao.cn/tags/i3wm/"}]},{"title":"【教程向】配置属于自己的vim","slug":"configvim","date":"2020-03-23T13:33:31.000Z","updated":"2020-04-20T09:56:26.348Z","comments":true,"path":"2020/03/23/configvim/","link":"","permalink":"https://mrhuanhao.cn/2020/03/23/configvim/","excerpt":"拥有一个自己的vim配置","text":"拥有一个自己的vim配置 新建Vim配置文件Linux 1mkdir ～/.vimrc 配置常用设置 配置 功能 set number 设置行号 set systax on 高亮 colorscheme{主题} 设置颜色主题 set hlsearch 高亮搜索 set foldmethod=indent 设置折叠方式 映射 map&lt; 预设 &gt; 命令 nmap vmap imap *noremap非递归映射 配置 功能 let mapleader=’，’ 设置leader建 let inoremap &lt; leader &gt;w &lt; Esc &gt;:w&lt; cr &gt; 退出insert保存文件 imap &lt; c-d &gt; &lt; Esc &gt;ddi 在insert下删除一行 插件搜索： https://vimawesome.com/ 我的配置 https://github.com/kjhuanhao/nvim","categories":[{"name":"vim","slug":"vim","permalink":"https://mrhuanhao.cn/categories/vim/"}],"tags":[{"name":"vim","slug":"vim","permalink":"https://mrhuanhao.cn/tags/vim/"}]},{"title":"【最简单的vim教程】vim学习笔记-基础操作","slug":"learnvim","date":"2020-03-23T13:31:57.000Z","updated":"2020-04-20T09:56:26.371Z","comments":true,"path":"2020/03/23/learnvim/","link":"","permalink":"https://mrhuanhao.cn/2020/03/23/learnvim/","excerpt":"Vim基础操作","text":"Vim基础操作 说明 C-字母 = Ctrl + 字母 char = 任意字符 开始编辑insert 按键 功能 说明 i（I） insert 当前位置插入（当前行前） a（A） append 当前字符后面插入（当前行后） o（O） open a line below 当前行的下面（当前行上面） 模式 模式 功能 说明 普通模式（ESC） normal 操作和移动 插入模式（i，a，o） insert 编辑 命令模式（：） command 执行命令 可视模式（v，V，C-v） visual 选择 可视模式visual 按键 说明 v 选中字符 V 选中当前行 C-v 方块选择 插入模式技巧insert 按键 功能 说明 C-h 删除 上一个字符 C-w 删除 当前单词 C-u 删除 当前行（终端可使用） C-a 移动到开头 终端 C-e 移动到结尾 终端 切换insert和normal模式 按键 功能 说明 C-[ 切换到normal 代替ESC C-c 切换到normal 代替ESC gi 跳转到上一次编辑的位置操作 普通模式normal 快速移动 按键 功能 说明 hjkl 移动 上下左右 w（W） 移动 下一个单词开头 e（E） 移动 下一个单词结尾 b（B） 移动 上一个单词开头 大写以空白格为分隔符 行间搜索移动 按键 功能 说明 f{char}（F） 跳转 跳转到char上（往前搜） t{char} 跳转 跳转到char前一个字符 ; or , 继续 继续查找 水平移动 按键 功能 说明 0 移动 移动到行首 $ 移动 移动到行尾 页面移动 按键 功能 说明 gg 移动 文件开头 G 移动 文件结尾 C-o 移动 快速返回上一位置 H/M/L 移动 屏幕开头/中间/尾 C-u 翻页 上 C-f 翻页 下 zz 翻页 中间 删除命令 按键 功能 说明 {number}x 删除 删除一个字符 diw delete 删除一个单词（不删除空格） dw 删除word 删除一个单词 {number}dd 删除 删除当前行 dt{符号} 删除 删除符号之间的内容 d 删除 直接删除选中部分 快速修改 按键 功能 说明 r（R） 替换 替换一个字符（替换后面一个字符） c{任意命令} 改变 删除然后进入i caw 改变 删除并改变一个单词 s（S） 替换 删除当前字符，然后进入i（删除整行） u 回退 撤销 C-r 回退 前进 查询 按键 功能 说明 / or ？ 查询 n or N 移动 下 /上 * / # 移动 前 / 后 Text Object[ number ]&lt; command &gt;[ text object ] 按键 功能 viw 选中一个单词 vaw 选中一个单词（周围） caw 修改一个单词 ci+符号 删除符号内的内容 … 寄存器复制粘贴normal 按键 功能 y（yy） 复制（复制一行） p 粘贴 ” + y 复制到系统剪切板 insert 按键 功能 C-v 粘贴 宏 按键 功能 q{char} 录制宏，并存在a中 q 结束录制宏 ：normal @{char} 批量恢复录制 @{char} 恢复录制 示例： []中间为示例操作流程 q{char} [ I{char}当前行前加入char （例子） A{char}当前行后加入char（例子） ] q 结束录制 恢复录制@a 行选需要操作的文本 ：normal @a","categories":[{"name":"vim","slug":"vim","permalink":"https://mrhuanhao.cn/categories/vim/"}],"tags":[{"name":"vim","slug":"vim","permalink":"https://mrhuanhao.cn/tags/vim/"}]},{"title":"【快速上手】Git的使用","slug":"usegit","date":"2020-03-23T13:30:10.000Z","updated":"2020-04-20T09:56:26.391Z","comments":true,"path":"2020/03/23/usegit/","link":"","permalink":"https://mrhuanhao.cn/2020/03/23/usegit/","excerpt":"让你快速上手Git","text":"让你快速上手Git 创建Git仓库1git init 查看当前仓库情况1git status 添加修改1git add (file) or git add . 查看未提交的修改1git diff 撤销提交操作1git reset 提交自己的身份12git config --global user.name &quot;xxx&quot;git config --global user.email &quot;xxx@xxx.com&quot; 向git提交内容1git commit -m &quot;&quot; 将本地仓库变为远程仓库1git remote add origin (adress) 忽略提交文件1touch .gitignore and add files to .gitignore 不再追踪某个文件1git rm --cached (file) 添加分支1git branch (name) 切换分支1git checkout (name) 合并分支1git merge (name) 列出本地分支1git branch -a 删除分支1git branch -d (name) or -D(Mandatory deletion) 设置本地分支追踪远程分支1git push --set-upstream","categories":[{"name":"git","slug":"git","permalink":"https://mrhuanhao.cn/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://mrhuanhao.cn/tags/git/"}]},{"title":"git秘钥生成","slug":"gitssh","date":"2020-03-23T13:28:15.000Z","updated":"2020-04-20T09:56:26.357Z","comments":true,"path":"2020/03/23/gitssh/","link":"","permalink":"https://mrhuanhao.cn/2020/03/23/gitssh/","excerpt":"前言git使用https协议，每次pull,push都要输入密码，使用git协议，使用ssh秘钥，可以省去每次输密码 大概需要三个步骤： 一、本地生成密钥对； 二、设置github上的公钥； 三、修改git的remote url为git协议。","text":"前言git使用https协议，每次pull,push都要输入密码，使用git协议，使用ssh秘钥，可以省去每次输密码 大概需要三个步骤： 一、本地生成密钥对； 二、设置github上的公钥； 三、修改git的remote url为git协议。 生成密钥1234567891011$ ssh-keygen -t rsa -C “your_email@youremail.com“ Creates a new ssh key using the provided email # Generating public&#x2F;private rsa key pair. Enter file in which to save the key (&#x2F;home&#x2F;you&#x2F;.ssh&#x2F;id_rsa): 直接Enter就行。然后，会提示你输入密码，如下(建议输一个，安全一点，当然不输也行)： Enter passphrase (empty for no passphrase): [Type a passphrase] Enter same passphrase again: [Type passphrase again] 然后会提示你,你的密钥在哪 123456Your identification has been saved in &#x2F;home&#x2F;you&#x2F;.ssh&#x2F;id_rsa. Your public key has been saved in &#x2F;home&#x2F;you&#x2F;.ssh&#x2F;id_rsa.pub. The key fingerprint is: # 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@youremail.com] 添加公钥到你的github帐户1.复制密钥 1$ cat ~&#x2F;.ssh&#x2F;id_rsa.pub 如果你是windows用户,那么请在你的用户目录下,找到.ssh文件夹然后打开id_rsa.pub直接复制就可以了 2、登陆你的github帐户。然后 Account Settings -&gt; 左栏点击 SSH Keys -&gt; 点击 Add SSH key 3、然后你复制上面的公钥内容，粘贴进“Key”文本域内。 title域，你随便填一个都行。 4、完了，点击 Add key。 这样，就OK了。然后，验证下这个key是不是正常工作。 1$ ssh -T git@github.com 会提示你: 1Hi username! You’ve successfully authenticated, but GitHub does not # provide shell access. 这就大功告成!","categories":[{"name":"git","slug":"git","permalink":"https://mrhuanhao.cn/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://mrhuanhao.cn/tags/git/"},{"name":"gitssh","slug":"gitssh","permalink":"https://mrhuanhao.cn/tags/gitssh/"}]},{"title":"wordpress博客搭建","slug":"wordpress","date":"2020-03-23T13:26:29.000Z","updated":"2020-04-20T09:56:26.394Z","comments":true,"path":"2020/03/23/wordpress/","link":"","permalink":"https://mrhuanhao.cn/2020/03/23/wordpress/","excerpt":"你好！本网站教程是利用虚拟主机搭建Wordpress个人网站","text":"你好！本网站教程是利用虚拟主机搭建Wordpress个人网站 前言不管您是接触过搭建网站还是没接触过的，只要跟着我的教程就可以成功搭建 WordPress官网：https://cn.wordpress.org/ 购买一个虚拟主机我推荐以下几个网址(CNY是人民币) 阿里云：https://www.aliyun.com/ //最便宜一年187CNY 腾讯云：https://cloud.tencent.com/ 硅云：https://www.vpsor.cn/aff?affid=46649 //最便宜的是一个月8CNY，建议在硅云买！！！ 西部数码：https://www.west.cn/ 亿速互联：http://www.ysiis.com/ //建议买独立ip一年118CNY PS：如果只是用来写写东西，做个小网站宣传自己什么的，用便宜的主机就可以了，建议在硅云和亿速互联买香港虚拟主机 如果你是商业用途，例如公司之类的建议在阿里云和腾讯云买 1购买国内的主机是需要公安局备案的，如果是购买香港或者美国等虚拟主机，无需备案也无需实名认证 数据库MySQLPS：如果你是在亿速互联或者硅云买的话是送数据库的，这样就省去买数据库的烦恼了，其他的我不了解，请自行体验 建议是用赠送数据库的网站，不然就自己去购买或者搭建本地数据库 购买一个域名和解析域名购买域名你可以用上面的推荐网址购买域名 阿里云：https://www.aliyun.com/ //需要实名认证 腾讯云：https://cloud.tencent.com/ //.xyz新用户只要9CNY/需要实名认证 硅云：https://www.vpsor.cn/ //可以说是我见过最便宜的域名网站/需要实名认证 西部数码：https://www.west.cn/ //需要实名认证 亿速互联：http://www.ysiis.com/ //这个也便宜/需要实名认证 新网：http://www.xinnet.com/ //这个厉害了，完成实名认证，域名免费送 Freenom：https://www.freenom.com/ //国外域名网站，无需实名认证，免费12个月 Namesilo：https://www.namesilo.com/ //国外域名网站，无需实名认证，优惠码：okoff 或者 go2think PS：这些网站的域名都很便宜，随便挑选 建议硅云： img 解析域名拥有了自己的虚拟主机和域名之后我们需要解析域名，通俗来说就是让这个域名地址可以访问你的网站 1在解析域名之前，如果你是用国内网站买的域名你需要过户或者实名认证，否则无法访问你的网站 打开域名的控制面板 点击解析 添加记录 img 主机记录：www和@ 记录类型：A记录 记录值：填写你虚拟主机的ip地址 //虚拟主机控制面板可以查看，不知道的话问客服 优先级：若虚拟主机无要求就默认 线路类型：若虚拟主机无要求就默认 TTL：若虚拟主机无要求就默认 我们要添加两个解析，www和@，和我上图一样就可以了 虚拟机域名绑定打开虚拟机控制面板 找到绑定域名的入口 img 输入你的域名地址 格式：www + 你的域名地址 点击绑定即可 下载WordPress文件 官网最新版下载地址：https://cn.wordpress.org/download/ 5.0.3百度云下载地址： https://pan.baidu.com/s/1fLDzge_Z4hXXhTTs4Iu_AA 提取码: iqgr 5.0.3高速下载地址：https://www.lanzous.com/i3iquna //网速慢的伙伴可以选择此链接 上传WordPress文件到虚拟主机不同的网站虚拟主机的文件上传方式都不一样，但通用的都是用FTP文件传输 如果你所购买的主机支持在线FTP那你可以直接用在线上传 上传方式一：FTP上传我们需要用到一个软件“Filezilla” 下载地址：https://www.filezilla.cn/ 下载后打开软件，我们需要输入以下信息,这些信息都可以在虚拟主机信息或者控制面板查找 如果你不清楚，可以询问网站的客服 不同的网站主机上传文件的方式不同，有的是需要上传到固定文件夹的，我们可以在网站里面找一下，例如我的是需要上传到web目录下 img 如果右边的站点出现文件夹代表链接成功，软件也会提示的 img 把左边的文件拖到右边就会自动上传了，我们需要将WordPress目录下的所有文件都上传到主机 1注意：不同的网站主机上传文件的方式不同，有的是需要上传到固定文件夹的，在上传之前一定要看主机上传文件说明，这个说明一般网站都会有，可能在问题中心里面 上传方式二：在线FTP我们需要进入主机的控制面板，找到类似可以管理虚拟文件的入口，比如在线FTP 不同的网站主机上传文件的方式不同，有的是需要上传到固定文件夹的，我们可以在网站里面找一下，例如我的是需要上传到web目录下 img 先上传WordPress文件的压缩包，上传之后选择在线解压解压到当前目录即可 1注意：不同的网站主机上传文件的方式不同，有的是需要上传到固定文件夹的，在上传之前一定要看主机上传文件说明，这个说明一般网站都会有，可能在问题中心里面 安装WordPress输入MySQL数据库信息现在你可以打开你的网站地址，会自动跳转到配置界面，如果没有自动跳转请打开下面的网址 你的网站地址 + /wp-admin/install.php //如果还是没有，你需要检查域名解析是否成功，然后检查文件是否正确上传到虚拟主机的指定目录 你会进入这个界面 img 你需要到虚拟主机赠送的数据库查看图片中的信息，数据库名、用户名、密码等 如果你购买的虚拟主机没有赠送数据库，那你就要去买一个或者自己搭建本地数据库（不提供搭建本地数据库教程） 点击开始 img 请按照你的数据库信息填写 点击提交 img 配置网站信息点击安装 img 此刻你需要输入你的网站信息，可以自定义 1注意保存好你的密码 点击安装WordPress img 恭喜你！出现这个界面代表搭建成功 访问网站访问自己的网站就会是这个界面了 img 这个界面是不是不好看，我们辛辛苦苦搭建的WordPress居然是这样的，我告诉你其实我们可以用主题美化 美化WordPress网站下载主题推荐两个主题下载地址 WordPress官网：https://cn.wordpress.org/themes/ //官网所有主题都在这了 Kratos-pjax：https://www.fczbl.vip/ //一个二次元主题 你也可以自行百度或者谷歌一下其他好看的主题 安装主题我们要进入这个网址 你的网址地址 + /wp-admin 这个就是你网站的管理界面，也就是后端 然后你会看到这个登入 img 这个就是我们在安装WordPress的时候，配置的用户名和密码 输入然后点击登入就可以了 这个就是我们的后台界面 img 有个最新版本建议不要更新，因为最新版本是英文的 我们点击右边的外观 点击添加 img 然后我们上传下载好的主题压缩包，点击上传主题 img 选择文件，点击安装 img PS：在添加主题这里，下面有官网提供的一些主题大家可也以选择安装，而且这是在线安装的很简单 我们可以查看左下角有进度条 img 上传成功显示如图： img 我们需要点击启用，让主题生效 img 免费主题下载地址：http://www.2zzt.com/ 主题进阶设置发现主题不能随心所欲怎么办，我教你为所… 咳咳！在外观下有个主题设置，进去就可以随心设置了 img 可以通过访问自己网址，看看是否生效（每次设置都要点保存哦！） img 我已经不再是那个白白的界面了","categories":[{"name":"搭建网站","slug":"搭建网站","permalink":"https://mrhuanhao.cn/categories/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"WordPress","slug":"WordPress","permalink":"https://mrhuanhao.cn/tags/WordPress/"},{"name":"博客","slug":"博客","permalink":"https://mrhuanhao.cn/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"【自己的下载平台】搭建aria2网站","slug":"aria2","date":"2020-03-23T13:21:59.000Z","updated":"2020-04-20T09:56:26.343Z","comments":true,"path":"2020/03/23/aria2/","link":"","permalink":"https://mrhuanhao.cn/2020/03/23/aria2/","excerpt":"本文章将带你搭建一个自己的服务器下载平台:aria2","text":"本文章将带你搭建一个自己的服务器下载平台:aria2 前言本文章将带你搭建一个自己的服务器下载平台:aria2,它的用途是什么? 下载用途 百度网盘 普通文件 迅雷种子 等等 准备工具 服务器连接软件xshell或者putty 一台服务器 安装宝塔面板请大家按照这个网站的https://moecat.cn/教程来安装宝塔面板,然后再回到教程 我这里用的是centos7服务器,如果你也是的话,直接跟着我安装宝塔面板就可以了 Bt_Panel_Pro 脚本（Centos): 1yum -y install wget;wget http://download.umaru.uk/Bt_Panel_Pro &amp;&amp; sh Bt_Panel_Pro 安装完成后,会给你宝塔面板的初始账号和秘密以及访问地址,请拿一个小本本记下来 讲解: 第一行的是你的访问链接 第二行是你的用户名 第三行是你的密码 Bt_Panel 脚本（升级开心版）： 1curl https://download.btpanel.net/install/update6.sh|bash 现在你就可以去登入你的宝塔面板了,只需要访问你的访问链接 相关插件安装进入软件商店 你只需要安装一个插件: Nginx 添加站点安装完插件后,请在左边的菜单栏,找到网站,然后点击添加站点,输入你的域名后点击提交即可 我们本次搭建的网站是纯静态的,所以其他的不需要选择 提示:请解析你的域名先哦! 记住你的根目录文件在哪哦! 然后点击设置,在域名管理中添加一个www.你的域名 下载网站源码(前端)github项目:https://github.com/ziahamza/webui-aria2 进入你的根目录,就是刚刚创建站点时的目录 一般的格式是/www/wwwroot/你的域名 点击远程下载,输入以下链接: https://github.com/ziahamza/webui-aria2/archive/master.zip 下载完成后,请解压文件,然后进入解压后的文件 全选文件,然后点击剪切 我们回到上一级目录,也就是你的/www/wwwroot/你的域名目录下 然后点击粘贴所有 我们现在进入docs文件目录 还是刚刚的操作,全选文件,点击剪切,然后粘贴所有到上一级目录 服务器下载aria2(后端)连接你的服务器,然后先来更新一下 centos: 1yum -y update ubuntu 1sudo apt update 更新完成之后,安装aria2 centos 1yum -y install aria2 ubuntu 1sudo apt install aria2 启动后端执行: 1aria2c --enable-rpc --rpc-listen-all --rpc-secret password password是你的密码,你可以自定义 会提示你如下信息 请先不要关闭连接服务器的软件,否则会停止后端服务 后面我会讲如何后台运行 开放端口进入宝塔面板.左边的菜单栏找到安全 输入6800,然后点击放行 连接设置进入你的网站,一般会提示你认证失败,切莫着急,我们还需要配置一下 点设置然后点连接设置 我们只需要设置两个地方,一个是主机一个是密码令牌 主机可以填IP或者域名 密码令牌填写刚刚运行启动端口命令的时候,后面设置的密码 如果你没有注意到刚刚启动后端的密码设置,你就填password 其他的无需填写,然后保存设置 现在刷新一下你的网页,就不会提示你认证失败了 让后端命令在后台运行安装screen centos 1yum -y install screen ubuntu 1sudo apt install screen 然后执行 1screen 这时我们会进入screen的新窗口,我们运行启动后端的命令 1aria2c --enable-rpc --rpc-listen-all --rpc-secret password passwd是你的密码 运行之后按住Ctrl + a,再按d就会退出这个窗口,而且启动后端的命令会在后台运行 这时我们就算关闭了连接软件也不会断开后端服务 如何利用aria2下载百度云网盘文件我们需要下载一个插件,下载地址: https://github.com/acgotaku/BaiduExporter/archive/master.zip 下载后请解压, 找到BaiduExporter.crx,然后将这个插件安装在你的浏览器中 如果你使用的是谷歌浏览器,请下载这个 https://www.lanzous.com/i5nyu1i 解压后使用开发者模式安装","categories":[{"name":"搭建网站","slug":"搭建网站","permalink":"https://mrhuanhao.cn/categories/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"aria2","slug":"aria2","permalink":"https://mrhuanhao.cn/tags/aria2/"},{"name":"web","slug":"web","permalink":"https://mrhuanhao.cn/tags/web/"}]},{"title":"h5ai服务器目录","slug":"h5ai","date":"2020-03-23T13:16:28.000Z","updated":"2020-04-20T09:56:26.362Z","comments":true,"path":"2020/03/23/h5ai/","link":"","permalink":"https://mrhuanhao.cn/2020/03/23/h5ai/","excerpt":"在前几天，我帮人安装h5ai这个东西，结果直接踩坑，装了一个下午，打算自己也装一个，顺便写一下教程最终效果演示： https://larsjung.de/h5ai/demo/","text":"在前几天，我帮人安装h5ai这个东西，结果直接踩坑，装了一个下午，打算自己也装一个，顺便写一下教程最终效果演示： https://larsjung.de/h5ai/demo/ 服务器服务器这里推荐在阿里云购买或者是Vultr 注意:如果阿里云国内服务器需要备案 购买Vultr更加方便哦!最低价格是5$一个月 注册链接:https://www.vultr.com/?ref=8120377-4F 此链接注册可获得50$体验卷(需要充值10$后才能使用) 域名推荐硅云:https://www.vpsor.cn/aff?affid=46649 新人购买域名.top和.xyz首年一元 (价格虽好,但请勿过度消费,我买了6个QAQ) 1.安装宝塔面板 为什么要安装宝塔面板呢? 答:我喜欢(主要是方便后期美化一下) 请先连接你的服务器(不连接咱们怎么安装?) 请大家按照这个网站的https://moecat.cn/教程来安装宝塔面板,然后再回到教程 我这里用的是centos7服务器,如果你也是的话,直接跟着我安装宝塔面板就可以了 Bt_Panel_Pro 脚本（Centos): yum -y install wget;wget http://download.umaru.uk/Bt_Panel_Pro &amp;&amp; sh Bt_Panel_Pro 1安装完成后,会给你宝塔面板的初始账号和秘密以及访问地址,请拿一个小本本记下来 讲解: 第一行的是你的访问链接 第二行是你的用户名 第三行是你的密码 Bt_Panel 脚本（升级开心版）： 停止支持 现在你就可以去登入你的宝塔面板了 相关插件安装进入软件商店 你需要安装以下插件: Nginx MySQL PHP 7.1或以上 phpMyAdmin 添加站点安装完插件后,请在左边的菜单栏,找到网站,然后点击添加站点,输入相关信息后点击提交即可 然后点击设置,在域名管理中添加一个www.你的域名 1PS:请记住数据库的用户名和密码,忘记密码可以在数据库中查看或重置 2.下载及解压h5ai文件在宝塔面板中左边找到文件 进入/www/wwwroot/你的域名这个文件夹下 然后点击远程下载 输入: https://release.larsjung.de/h5ai/h5ai-0.29.2.zip 然后解压文件 3.域名解析这里以硅云的域名控制台为例 添加WWW和@解析 记录类型都是A 记录值填你服务器的IP地址 4.安装依赖和配置PHP查看依赖信息在浏览器中访问 你的域名/_h5ai/public/index.php 默认密码是空的直接点击登入即可 左边已经是yes或者变成绿色的,证明对应的依赖已经安装成功 配置PHP在你的软件商店中找到你下载的PHP版本–进入设置–禁用函数 删除exec 和 passthru #Shell tar Shell zip Shell du就会显示成yes 安装Use EXIF thumbs然后点击安装扩展 安装imagemagick和exif #Use EXIF thumbs会显示成yes 现在还差两个,再次连接你的服务器 安装依赖安装PDF thumbs(convert)执行 1yum -y install ImageMagick 安装Movie thumbs(ffmpeg)#x86_64下载二进制文件wget https://www.moerats.com/usr/down/ffmpeg/ffmpeg-git-64bit-static.tar.xz#解压文件tar xvf ffmpeg-git-64bit-static.tar.xzrm -rf ffmpeg-git-64bit-static.tar.xz#将ffmpeg和ffprobe可执行文件移至/usr/bin方便系统直接调用mv ffmpeg-git-20180831-64bit-static/ffmpeg ffmpeg-git-20180831-64bit-static/ffprobe /usr/bin/#查看版本ffmpegffprobe | 出现错误的看这里: PS:如果在mv ffmpeg-git-20180831-64bit-static/ffmpeg ffmpeg-git-20180831-64bit-static/ffprobe /usr/bin/这条命令中如果你执行出现了错误,请cd到 / 目录,然后执行ls查看解压之后的文件夹 然后替换命令中的两个ffmpeg-git-20180831-64bit-static,改成你解压之后的文件夹即可 此时你的再访问/_h5ai/public/index.php全变成了yes,这就ok了 5.设置网站默认文档进入你的宝塔面板–进入网站点击设置–点击默认文档 在下面添加一个 /_h5ai/public/index.php 记得点击添加 这时候你可以直接访问你域名了,可以看到搭建成功 但是内容是空的,因为我们还没上传文件呢","categories":[{"name":"搭建网站","slug":"搭建网站","permalink":"https://mrhuanhao.cn/categories/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"h5ai","slug":"h5ai","permalink":"https://mrhuanhao.cn/tags/h5ai/"}]}],"categories":[{"name":"服务器","slug":"服务器","permalink":"https://mrhuanhao.cn/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"arch","slug":"arch","permalink":"https://mrhuanhao.cn/categories/arch/"},{"name":"git","slug":"git","permalink":"https://mrhuanhao.cn/categories/git/"},{"name":"brew","slug":"brew","permalink":"https://mrhuanhao.cn/categories/brew/"},{"name":"picgo","slug":"picgo","permalink":"https://mrhuanhao.cn/categories/picgo/"},{"name":"netlify","slug":"netlify","permalink":"https://mrhuanhao.cn/categories/netlify/"},{"name":"valine","slug":"valine","permalink":"https://mrhuanhao.cn/categories/valine/"},{"name":"搭建网站","slug":"搭建网站","permalink":"https://mrhuanhao.cn/categories/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"},{"name":"hexo","slug":"搭建网站/hexo","permalink":"https://mrhuanhao.cn/categories/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/hexo/"},{"name":"picee","slug":"picee","permalink":"https://mrhuanhao.cn/categories/picee/"},{"name":"linux","slug":"linux","permalink":"https://mrhuanhao.cn/categories/linux/"},{"name":"archlinux","slug":"archlinux","permalink":"https://mrhuanhao.cn/categories/archlinux/"},{"name":"linux","slug":"archlinux/linux","permalink":"https://mrhuanhao.cn/categories/archlinux/linux/"},{"name":"编程","slug":"编程","permalink":"https://mrhuanhao.cn/categories/%E7%BC%96%E7%A8%8B/"},{"name":"i3wm","slug":"i3wm","permalink":"https://mrhuanhao.cn/categories/i3wm/"},{"name":"vim","slug":"vim","permalink":"https://mrhuanhao.cn/categories/vim/"}],"tags":[{"name":"我的世界","slug":"我的世界","permalink":"https://mrhuanhao.cn/tags/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C/"},{"name":"arch","slug":"arch","permalink":"https://mrhuanhao.cn/tags/arch/"},{"name":"git","slug":"git","permalink":"https://mrhuanhao.cn/tags/git/"},{"name":"brew","slug":"brew","permalink":"https://mrhuanhao.cn/tags/brew/"},{"name":"picgo","slug":"picgo","permalink":"https://mrhuanhao.cn/tags/picgo/"},{"name":"hexo","slug":"hexo","permalink":"https://mrhuanhao.cn/tags/hexo/"},{"name":"netlify","slug":"netlify","permalink":"https://mrhuanhao.cn/tags/netlify/"},{"name":"valine","slug":"valine","permalink":"https://mrhuanhao.cn/tags/valine/"},{"name":"picee","slug":"picee","permalink":"https://mrhuanhao.cn/tags/picee/"},{"name":"图床","slug":"图床","permalink":"https://mrhuanhao.cn/tags/%E5%9B%BE%E5%BA%8A/"},{"name":"markdown","slug":"markdown","permalink":"https://mrhuanhao.cn/tags/markdown/"},{"name":"kde","slug":"kde","permalink":"https://mrhuanhao.cn/tags/kde/"},{"name":"archlinux","slug":"archlinux","permalink":"https://mrhuanhao.cn/tags/archlinux/"},{"name":"linux","slug":"linux","permalink":"https://mrhuanhao.cn/tags/linux/"},{"name":"进制","slug":"进制","permalink":"https://mrhuanhao.cn/tags/%E8%BF%9B%E5%88%B6/"},{"name":"manjaro","slug":"manjaro","permalink":"https://mrhuanhao.cn/tags/manjaro/"},{"name":"i3wm","slug":"i3wm","permalink":"https://mrhuanhao.cn/tags/i3wm/"},{"name":"vim","slug":"vim","permalink":"https://mrhuanhao.cn/tags/vim/"},{"name":"gitssh","slug":"gitssh","permalink":"https://mrhuanhao.cn/tags/gitssh/"},{"name":"WordPress","slug":"WordPress","permalink":"https://mrhuanhao.cn/tags/WordPress/"},{"name":"博客","slug":"博客","permalink":"https://mrhuanhao.cn/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"aria2","slug":"aria2","permalink":"https://mrhuanhao.cn/tags/aria2/"},{"name":"web","slug":"web","permalink":"https://mrhuanhao.cn/tags/web/"},{"name":"h5ai","slug":"h5ai","permalink":"https://mrhuanhao.cn/tags/h5ai/"}]}